window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "doc"], "ref": "fullname", "documentStore": {"docs": {"wasmer": {"fullname": "wasmer", "modulename": "wasmer", "qualname": "", "type": "module", "doc": "<h1 id=\"wasmer-python-api\">Wasmer Python API</h1>\n\n<p><a href=\"https://badge.fury.io/py/wasmer\"><img src=\"https://badge.fury.io/py/wasmer.svg?\" alt=\"PyPI version\" /></a> <a href=\"https://wasmerio.github.io/wasmer-python/api/\"><img src=\"https://img.shields.io/badge/docs-read-green\" alt=\"Wasmer Python Documentation\" /></a> <a href=\"https://pypi.org/project/wasmer/\"><img src=\"https://pepy.tech/badge/wasmer\" alt=\"Wasmer PyPI downloads\" /></a> <a href=\"https://slack.wasmer.io\"><img src=\"https://img.shields.io/static/v1?label=chat&amp;message=on%20Slack&amp;color=green\" alt=\"Wasmer Slack Channel\" /></a></p>\n\n<p>A complete and mature WebAssembly runtime for Python based on <a href=\"https://github.com/wasmerio/wasmer\">Wasmer</a>.</p>\n\n<p>Features:</p>\n\n<ul>\n<li><strong>Easy to use</strong>: The <code>wasmer</code> API mimics the standard WebAssembly API,</li>\n<li><strong>Fast</strong>: <code>wasmer</code> executes the WebAssembly modules as fast as\npossible, close to <strong>native speed</strong>,</li>\n<li><strong>Safe</strong>: All calls to WebAssembly will be fast, but more\nimportantly, completely safe and sandboxed.</li>\n</ul>\n\n<h2 id=\"example\">Example</h2>\n\n<p>The very basic example is the following:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span>\n\n<span class=\"c1\"># Create a store, which holds the engine, the compiler etc.</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Let&#39;s assume we don&#39;t have WebAssembly bytes at hand. We will</span>\n<span class=\"c1\"># write WebAssembly manually.</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">store</span><span class=\"p\">,</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (type (func (param i32 i32) (result i32)))</span>\n<span class=\"sd\">      (func (type 0)</span>\n<span class=\"sd\">        local.get 0</span>\n<span class=\"sd\">        local.get 1</span>\n<span class=\"sd\">        i32.add)</span>\n<span class=\"sd\">      (export &quot;sum&quot; (func 0)))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Instantiates the module.</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now, let&#39;s execute the `sum` function.</span>\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n</code></pre></div>\n\n<p>That's it. Now explore the API! Some pointers for the adventurers:</p>\n\n<ul>\n<li>The basic elements are <code>Module</code> and <code>Instance</code>,</li>\n<li>Exports of an instance are represented by the <code>Exports</code> object,</li>\n<li>Maybe your module needs to import <code>Function</code>, <code>Memory</code>, <code>Global</code>\nor <code>Table</code>? Well, there is the Python <code>dict</code> for that!</li>\n<li>It is possible to read and write <code>Memory</code> data with the Python\nbuffer protocol with <code>Buffer</code>.</li>\n</ul>\n\n<p>Have fun!</p>\n"}, "wasmer.wasmer": {"fullname": "wasmer.wasmer", "modulename": "wasmer.wasmer", "qualname": "", "type": "module", "doc": "<h1 id=\"wasmer-python-api\">Wasmer Python API</h1>\n\n<p><a href=\"https://badge.fury.io/py/wasmer\"><img src=\"https://badge.fury.io/py/wasmer.svg?\" alt=\"PyPI version\" /></a> <a href=\"https://wasmerio.github.io/wasmer-python/api/\"><img src=\"https://img.shields.io/badge/docs-read-green\" alt=\"Wasmer Python Documentation\" /></a> <a href=\"https://pypi.org/project/wasmer/\"><img src=\"https://pepy.tech/badge/wasmer\" alt=\"Wasmer PyPI downloads\" /></a> <a href=\"https://slack.wasmer.io\"><img src=\"https://img.shields.io/static/v1?label=chat&amp;message=on%20Slack&amp;color=green\" alt=\"Wasmer Slack Channel\" /></a></p>\n\n<p>A complete and mature WebAssembly runtime for Python based on <a href=\"https://github.com/wasmerio/wasmer\">Wasmer</a>.</p>\n\n<p>Features:</p>\n\n<ul>\n<li><strong>Easy to use</strong>: The <code>wasmer</code> API mimics the standard WebAssembly API,</li>\n<li><strong>Fast</strong>: <code>wasmer</code> executes the WebAssembly modules as fast as\npossible, close to <strong>native speed</strong>,</li>\n<li><strong>Safe</strong>: All calls to WebAssembly will be fast, but more\nimportantly, completely safe and sandboxed.</li>\n</ul>\n\n<h2 id=\"example\">Example</h2>\n\n<p>The very basic example is the following:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span>\n\n<span class=\"c1\"># Create a store, which holds the engine, the compiler etc.</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Let&#39;s assume we don&#39;t have WebAssembly bytes at hand. We will</span>\n<span class=\"c1\"># write WebAssembly manually.</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">store</span><span class=\"p\">,</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (type (func (param i32 i32) (result i32)))</span>\n<span class=\"sd\">      (func (type 0)</span>\n<span class=\"sd\">        local.get 0</span>\n<span class=\"sd\">        local.get 1</span>\n<span class=\"sd\">        i32.add)</span>\n<span class=\"sd\">      (export &quot;sum&quot; (func 0)))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Instantiates the module.</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now, let&#39;s execute the `sum` function.</span>\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n</code></pre></div>\n\n<p>That's it. Now explore the API! Some pointers for the adventurers:</p>\n\n<ul>\n<li>The basic elements are <code>Module</code> and <code>Instance</code>,</li>\n<li>Exports of an instance are represented by the <code>Exports</code> object,</li>\n<li>Maybe your module needs to import <code>Function</code>, <code>Memory</code>, <code>Global</code>\nor <code>Table</code>? Well, there is the Python <code>dict</code> for that!</li>\n<li>It is possible to read and write <code>Memory</code> data with the Python\nbuffer protocol with <code>Buffer</code>.</li>\n</ul>\n\n<p>Have fun!</p>\n"}, "wasmer.wasmer.wat2wasm": {"fullname": "wasmer.wasmer.wat2wasm", "modulename": "wasmer.wasmer", "qualname": "wat2wasm", "type": "function", "doc": "<p>Translate WebAssembly text source to WebAssembly binary format.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">wat2wasm</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">wat2wasm</span><span class=\"p\">(</span><span class=\"s1\">&#39;(module)&#39;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;</span><span class=\"se\">\\x00</span><span class=\"s1\">asm</span><span class=\"se\">\\x01\\x00\\x00\\x00</span><span class=\"s1\">&#39;</span>\n</code></pre></div>\n", "parameters": ["wat"], "funcdef": "def"}, "wasmer.wasmer.wasm2wat": {"fullname": "wasmer.wasmer.wasm2wat", "modulename": "wasmer.wasmer", "qualname": "wasm2wat", "type": "function", "doc": "<p>Disassemble WebAssembly binary to WebAssembly text format.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">wasm2wat</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">wasm2wat</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">&#39;</span><span class=\"se\">\\x00</span><span class=\"s1\">asm</span><span class=\"se\">\\x01\\x00\\x00\\x00</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;(module)&#39;</span>\n</code></pre></div>\n", "parameters": ["bytes"], "funcdef": "def"}, "wasmer.wasmer.Exports": {"fullname": "wasmer.wasmer.Exports", "modulename": "wasmer.wasmer", "qualname": "Exports", "type": "class", "doc": "<p>Represents all the exports of an instance. It is built by\n<code>Instance.exports</code>.</p>\n\n<p>Exports can be of kind <code>Function</code>, <code>Global</code>, <code>Table</code>, or <code>Memory</code>.</p>\n\n<p>The <code>Exports</code> class implement <a href=\"https://docs.python.org/3/c-api/iter.html\">the Iterator\nProtocol</a>. Please see\nthe <code>ExportsIterator</code> class.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Exports</span><span class=\"p\">,</span> <span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">,</span> <span class=\"n\">Table</span><span class=\"p\">,</span> <span class=\"n\">Memory</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">Store</span><span class=\"p\">(),</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (func (export &quot;func&quot;) (param i32 i64))</span>\n<span class=\"sd\">      (global (export &quot;glob&quot;) i32 (i32.const 7))</span>\n<span class=\"sd\">      (table (export &quot;tab&quot;) 0 funcref)</span>\n<span class=\"sd\">      (memory (export &quot;mem&quot;) 1))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">,</span> <span class=\"n\">Exports</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">Function</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"n\">Table</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">mem</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Exports.__init__": {"fullname": "wasmer.wasmer.Exports.__init__", "modulename": "wasmer.wasmer", "qualname": "Exports.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.ExportsIterator": {"fullname": "wasmer.wasmer.ExportsIterator", "modulename": "wasmer.wasmer", "qualname": "ExportsIterator", "type": "class", "doc": "<p>Iterator over all the exports of an <code>Instance</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Exports</span><span class=\"p\">,</span> <span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">,</span> <span class=\"n\">Table</span><span class=\"p\">,</span> <span class=\"n\">Memory</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">Store</span><span class=\"p\">(),</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (func (export &quot;func&quot;) (param i32 i64))</span>\n<span class=\"sd\">      (global (export &quot;glob&quot;) i32 (i32.const 7))</span>\n<span class=\"sd\">      (table (export &quot;tab&quot;) 0 funcref)</span>\n<span class=\"sd\">      (memory (export &quot;mem&quot;) 1))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"p\">[</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">export</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s2\">&quot;func&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;glob&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;tab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mem&quot;</span><span class=\"p\">]</span>\n</code></pre></div>\n"}, "wasmer.wasmer.ExportsIterator.__init__": {"fullname": "wasmer.wasmer.ExportsIterator.__init__", "modulename": "wasmer.wasmer", "qualname": "ExportsIterator.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Function": {"fullname": "wasmer.wasmer.Function", "modulename": "wasmer.wasmer", "qualname": "Function", "type": "class", "doc": "<p>Represents a WebAssembly function instance.</p>\n\n<p>A function instance is the runtime representation of a\nfunction. It effectively is a closure of the original function\n(defined in either the host or the WebAssembly module) over the\nruntime <code>Instance</code> of its originating <code>Module</code>.</p>\n\n<p>The module instance is used to resolve references to other\ndefinitions during executing of the function.</p>\n\n<p>Specification: https://webassembly.github.io/spec/core/exec/runtime.html#function-instances</p>\n\n<p>Note that the function can be invoked/called by the host only when\nit is an exported function (see <code>Exports</code> to see an example).</p>\n\n<h1 id=\"example\">Example</h1>\n\n<p>To build a <code>Function</code>, we need its type. It can either be inferred\nfrom Python thanks to annotations, or be given with a\n<code>FunctionType</code> value.</p>\n\n<h2 id=\"with-python-annotations\">With Python annotations</h2>\n\n<p>First, let's see with Python annotations:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">)</span>\n<span class=\"n\">function_type</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"o\">.</span><span class=\"n\">type</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">function_type</span><span class=\"o\">.</span><span class=\"n\">params</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">function_type</span><span class=\"o\">.</span><span class=\"n\">results</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>Here is the mapping table:</p>\n\n<table>\n<thead>\n<tr>\n  <th>Annotations</th>\n  <th>WebAssembly type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>int</code>, <code>'i32'</code>, <code>'I32'</code></td>\n  <td><code>Type.I32</code></td>\n</tr>\n<tr>\n  <td><code>'i64'</code>, <code>'I64'</code></td>\n  <td><code>Type.I64</code></td>\n</tr>\n<tr>\n  <td><code>float</code>, <code>'f32'</code>, <code>'F32'</code></td>\n  <td><code>Type.F32</code></td>\n</tr>\n<tr>\n  <td><code>'f64'</code>, <code>'F64'</code></td>\n  <td><code>Type.F64</code></td>\n</tr>\n<tr>\n  <td><code>None</code></td>\n  <td>none (only in <code>return</code> position)</td>\n</tr>\n</tbody>\n</table>\n\n<p>It is possible for a host function to return a tuple of the types above (except <code>None</code>), like:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">swap</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"s1\">&#39;i32&#39;</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"s1\">&#39;i64&#39;</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"p\">(</span><span class=\"s1\">&#39;i64&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;i32&#39;</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">swap</span><span class=\"p\">)</span>\n<span class=\"n\">function_type</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"o\">.</span><span class=\"n\">type</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">function_type</span><span class=\"o\">.</span><span class=\"n\">params</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I64</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">function_type</span><span class=\"o\">.</span><span class=\"n\">results</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I64</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h2 id=\"with-functiontype\">With <code>FunctionType</code></h2>\n\n<p>Second, the same code but without annotations and a <code>FunctionType</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">([</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">]))</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Function.__init__": {"fullname": "wasmer.wasmer.Function.__init__", "modulename": "wasmer.wasmer", "qualname": "Function.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Function.type": {"fullname": "wasmer.wasmer.Function.type", "modulename": "wasmer.wasmer", "qualname": "Function.type", "type": "variable", "doc": "<p>Returns the type of the function as a <code>FunctionType</code> object.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">Store</span><span class=\"p\">(),</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (type (func (param i32 i32) (result i32)))</span>\n<span class=\"sd\">      (func (type 0)</span>\n<span class=\"sd\">        local.get 0</span>\n<span class=\"sd\">        local.get 1</span>\n<span class=\"sd\">        i32.add)</span>\n<span class=\"sd\">      (export &quot;sum&quot; (func 0)))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">sum</span>\n<span class=\"n\">sum_type</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"o\">.</span><span class=\"n\">type</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">sum_type</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">sum_type</span><span class=\"o\">.</span><span class=\"n\">params</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">sum_type</span><span class=\"o\">.</span><span class=\"n\">results</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Global": {"fullname": "wasmer.wasmer.Global", "modulename": "wasmer.wasmer", "qualname": "Global", "type": "class", "doc": "<p>Represents a WebAssembly global instance.</p>\n\n<p>A global instance is the runtime representation of a global\nvariable. It consists of an individual value and a flag indicating\nwhether it is mutable.</p>\n\n<p>Specification: https://webassembly.github.io/spec/core/exec/runtime.html#global-instances</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Let&#39;s create an immutable global.</span>\n<span class=\"n\">global_</span> <span class=\"o\">=</span> <span class=\"n\">Global</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">))</span>\n<span class=\"n\">global_type</span> <span class=\"o\">=</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">type</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n<span class=\"k\">assert</span> <span class=\"n\">global_type</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span>\n<span class=\"k\">assert</span> <span class=\"n\">global_type</span><span class=\"o\">.</span><span class=\"n\">mutable</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n\n<span class=\"c1\"># Let&#39;s create an mutable global.</span>\n<span class=\"n\">global_</span> <span class=\"o\">=</span> <span class=\"n\">Global</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">),</span> <span class=\"n\">mutable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">mutable</span> <span class=\"o\">==</span> <span class=\"kc\">True</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Global.__init__": {"fullname": "wasmer.wasmer.Global.__init__", "modulename": "wasmer.wasmer", "qualname": "Global.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Global.type": {"fullname": "wasmer.wasmer.Global.type", "modulename": "wasmer.wasmer", "qualname": "Global.type", "type": "variable", "doc": "<p>Returns the type of the global as a value of kind <code>GlobalType</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"n\">global_</span> <span class=\"o\">=</span> <span class=\"n\">Global</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">),</span> <span class=\"n\">mutable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">global_type</span> <span class=\"o\">=</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">type</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">global_type</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span>\n<span class=\"k\">assert</span> <span class=\"n\">global_type</span><span class=\"o\">.</span><span class=\"n\">mutable</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Global.value": {"fullname": "wasmer.wasmer.Global.value", "modulename": "wasmer.wasmer", "qualname": "Global.value", "type": "variable", "doc": "<p>Get or set a custom value to the global instance.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">,</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">global_</span> <span class=\"o\">=</span> <span class=\"n\">Global</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">),</span> <span class=\"n\">mutable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n\n<span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">153</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">153</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Global.mutable": {"fullname": "wasmer.wasmer.Global.mutable", "modulename": "wasmer.wasmer", "qualname": "Global.mutable", "type": "variable", "doc": "<p>Checks whether the global is mutable.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">,</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">global_</span> <span class=\"o\">=</span> <span class=\"n\">Global</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">),</span> <span class=\"n\">mutable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">mutable</span> <span class=\"o\">==</span> <span class=\"kc\">True</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Memory": {"fullname": "wasmer.wasmer.Memory", "modulename": "wasmer.wasmer", "qualname": "Memory", "type": "class", "doc": "<p>A WebAssembly memory instance.</p>\n\n<p>A memory instance is the runtime representation of a linear\nmemory. It consists of a vector of bytes and an optional maximum\nsize.</p>\n\n<p>The length of the vector always is a multiple of the WebAssembly\npage size, which is defined to be the constant 65536 \u2013 abbreviated\n64Ki. Like in a memory type, the maximum size in a memory\ninstance is given in units of this page size.</p>\n\n<p>A memory created by the host or in WebAssembly code will be accessible and\nmutable from both host and WebAssembly.</p>\n\n<p>Specification: https://webassembly.github.io/spec/core/exec/runtime.html#memory-instances</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>Creates a <code>Memory</code> from scratch:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">memory_type</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n</code></pre></div>\n\n<p>Gets a memory from the exports of an instance:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Memory</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Memory.__init__": {"fullname": "wasmer.wasmer.Memory.__init__", "modulename": "wasmer.wasmer", "qualname": "Memory.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Memory.grow": {"fullname": "wasmer.wasmer.Memory.grow", "modulename": "wasmer.wasmer", "qualname": "Memory.grow", "type": "function", "doc": "<p>Grow memory by the specified amount of WebAssembly pages.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">memory_type</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n\n<span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">grow</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"mi\">5</span>\n</code></pre></div>\n", "parameters": ["self", "number_of_pages"], "funcdef": "def"}, "wasmer.wasmer.Memory.uint8_view": {"fullname": "wasmer.wasmer.Memory.uint8_view", "modulename": "wasmer.wasmer", "qualname": "Memory.uint8_view", "type": "function", "doc": "<p>Creates a read-and-write view over the memory data where\nelements are of kind <code>uint8</code>. See the <code>Uint8Array</code> view to\nlearn more.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">memory_type</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">),</span> <span class=\"n\">Uint8Array</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.int8_view": {"fullname": "wasmer.wasmer.Memory.int8_view", "modulename": "wasmer.wasmer", "qualname": "Memory.int8_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>int8</code>. See the <code>Int8Array</code> view to learn more,\nand the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.uint16_view": {"fullname": "wasmer.wasmer.Memory.uint16_view", "modulename": "wasmer.wasmer", "qualname": "Memory.uint16_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>uint16</code>. See the <code>Uint16Array</code> view to learn\nmore, and the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.int16_view": {"fullname": "wasmer.wasmer.Memory.int16_view", "modulename": "wasmer.wasmer", "qualname": "Memory.int16_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>int16</code>. See the <code>Int16Array</code> view to learn more,\nand the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.uint32_view": {"fullname": "wasmer.wasmer.Memory.uint32_view", "modulename": "wasmer.wasmer", "qualname": "Memory.uint32_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>uint32</code>. See the <code>Uint32Array</code> view to learn\nmore, and the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.int32_view": {"fullname": "wasmer.wasmer.Memory.int32_view", "modulename": "wasmer.wasmer", "qualname": "Memory.int32_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>int32</code>. See the <code>Int32Array</code> view to learn more,\nand the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.uint64_view": {"fullname": "wasmer.wasmer.Memory.uint64_view", "modulename": "wasmer.wasmer", "qualname": "Memory.uint64_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>uint64</code>. See the <code>Uint64Array</code> view to learn\nmore, and the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.int64_view": {"fullname": "wasmer.wasmer.Memory.int64_view", "modulename": "wasmer.wasmer", "qualname": "Memory.int64_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>int64</code>. See the <code>Int64Array</code> view to learn more,\nand the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.float32_view": {"fullname": "wasmer.wasmer.Memory.float32_view", "modulename": "wasmer.wasmer", "qualname": "Memory.float32_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>float32</code>. See the <code>Float32Array</code> view to learn more,\nand the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.float64_view": {"fullname": "wasmer.wasmer.Memory.float64_view", "modulename": "wasmer.wasmer", "qualname": "Memory.float64_view", "type": "function", "doc": "<p>Creates a read-and-write over the memory data where elements\nare of kind <code>float64</code>. See the <code>Float64Array</code> view to learn more,\nand the <code>Memory.uint8_view</code> method to see an example.</p>\n", "parameters": ["self", "offset"], "funcdef": "def"}, "wasmer.wasmer.Memory.type": {"fullname": "wasmer.wasmer.Memory.type", "modulename": "wasmer.wasmer", "qualname": "Memory.type", "type": "variable", "doc": "<p>Gets the memory type, of kind <code>MemoryType</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span>\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">type</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">memory_type</span><span class=\"o\">.</span><span class=\"n\">minimum</span> <span class=\"o\">==</span> <span class=\"mi\">17</span>\n<span class=\"k\">assert</span> <span class=\"n\">memory_type</span><span class=\"o\">.</span><span class=\"n\">maximum</span> <span class=\"o\">==</span> <span class=\"kc\">None</span>\n<span class=\"k\">assert</span> <span class=\"n\">memory_type</span><span class=\"o\">.</span><span class=\"n\">shared</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Memory.data_size": {"fullname": "wasmer.wasmer.Memory.data_size", "modulename": "wasmer.wasmer", "qualname": "Memory.data_size", "type": "variable", "doc": "<p>Returns the size (in bytes) of the <code>Memory</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">memory_type</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">data_size</span> <span class=\"o\">==</span> <span class=\"mi\">196608</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Memory.size": {"fullname": "wasmer.wasmer.Memory.size", "modulename": "wasmer.wasmer", "qualname": "Memory.size", "type": "variable", "doc": "<p>Returns the size (in pages) of the <code>Memory</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">memory_type</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Memory.buffer": {"fullname": "wasmer.wasmer.Memory.buffer", "modulename": "wasmer.wasmer", "qualname": "Memory.buffer", "type": "variable", "doc": "<p>Creates a Python buffer to read and write the memory data. See\nthe <code>Buffer</code> class to learn more.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">,</span> <span class=\"n\">Buffer</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">memory_type</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"p\">,</span> <span class=\"n\">Buffer</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Table": {"fullname": "wasmer.wasmer.Table", "modulename": "wasmer.wasmer", "qualname": "Table", "type": "class", "doc": "<p>A WebAssembly table instance.</p>\n\n<p>The <code>Table</code> class is an array-like structure representing a\nWebAssembly table, which stores function references.</p>\n\n<p>A table created by the host or in WebAssembly code will be\naccessible and mutable from both host and WebAssembly.</p>\n\n<p>Specification: https://webassembly.github.io/spec/core/exec/runtime.html#table-instances</p>\n"}, "wasmer.wasmer.Table.__init__": {"fullname": "wasmer.wasmer.Table.__init__", "modulename": "wasmer.wasmer", "qualname": "Table.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Table.type": {"fullname": "wasmer.wasmer.Table.type", "modulename": "wasmer.wasmer", "qualname": "Table.type", "type": "variable", "doc": "<p>Gets the table type, as an object of kind <code>TableType</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Table</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;(module (table (export &quot;table&quot;) 2 funcref))&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">table</span>\n<span class=\"n\">table_type</span> <span class=\"o\">=</span> <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">type</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">table_type</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">FUNC_REF</span>\n<span class=\"k\">assert</span> <span class=\"n\">table_type</span><span class=\"o\">.</span><span class=\"n\">minimum</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"k\">assert</span> <span class=\"n\">table_type</span><span class=\"o\">.</span><span class=\"n\">maximum</span> <span class=\"o\">==</span> <span class=\"kc\">None</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Table.size": {"fullname": "wasmer.wasmer.Table.size", "modulename": "wasmer.wasmer", "qualname": "Table.size", "type": "variable", "doc": "<p>Gets the table size (in elements).</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Table</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;(module (table (export &quot;table&quot;) 2 funcref))&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">table</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n</code></pre></div>\n"}, "wasmer.wasmer.ImportObject": {"fullname": "wasmer.wasmer.ImportObject", "modulename": "wasmer.wasmer", "qualname": "ImportObject", "type": "class", "doc": "<p>An <code>ImportObject</code> represents all of the import data used when\ninstantiating a WebAssembly module.</p>\n\n<h1 id=\"important\">Important</h1>\n\n<p>This object is deprecated in favor of dictionaries in Python.\nYou can now type:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Function</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">import_object</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"n\">import_object</span><span class=\"p\">[</span><span class=\"s2\">&quot;math&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">:</span> <span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h2 id=\"example\">Example</h2>\n\n<p>Importing a function, <code>math.sum</code>, and call it through the exported\n<code>add_one</code> function:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">ImportObject</span><span class=\"p\">,</span> <span class=\"n\">Function</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">store</span><span class=\"p\">,</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (import &quot;math&quot; &quot;sum&quot; (func $sum (param i32 i32) (result i32)))</span>\n<span class=\"sd\">      (func (export &quot;add_one&quot;) (param i32) (result i32)</span>\n<span class=\"sd\">        local.get 0</span>\n<span class=\"sd\">        i32.const 1</span>\n<span class=\"sd\">        call $sum))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">import_object</span> <span class=\"o\">=</span> <span class=\"n\">ImportObject</span><span class=\"p\">()</span>\n<span class=\"n\">import_object</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;math&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">:</span> <span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">import_object</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">add_one</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n</code></pre></div>\n\n<p>Importing a memory:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">,</span> <span class=\"n\">ImportObject</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">store</span><span class=\"p\">,</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (import &quot;env&quot; &quot;memory&quot; (memory $memory 1))</span>\n<span class=\"sd\">      (func (export &quot;increment&quot;)</span>\n<span class=\"sd\">        i32.const 0</span>\n<span class=\"sd\">        i32.const 0</span>\n<span class=\"sd\">        i32.load    ;; load 0</span>\n<span class=\"sd\">        i32.const 1</span>\n<span class=\"sd\">        i32.add     ;; add 1</span>\n<span class=\"sd\">        i32.store   ;; store at 0</span>\n<span class=\"sd\">        ))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">import_object</span> <span class=\"o\">=</span> <span class=\"n\">ImportObject</span><span class=\"p\">()</span>\n<span class=\"n\">import_object</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;env&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;memory&quot;</span><span class=\"p\">:</span> <span class=\"n\">memory</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">import_object</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">view</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">increment</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">view</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">increment</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">view</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n</code></pre></div>\n\n<p>Importing a global:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">ImportObject</span><span class=\"p\">,</span> <span class=\"n\">Global</span><span class=\"p\">,</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">store</span><span class=\"p\">,</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (import &quot;env&quot; &quot;global&quot; (global $global (mut i32)))</span>\n<span class=\"sd\">      (func (export &quot;read_g&quot;) (result i32)</span>\n<span class=\"sd\">        global.get $global)</span>\n<span class=\"sd\">      (func (export &quot;write_g&quot;) (param i32)</span>\n<span class=\"sd\">        local.get 0</span>\n<span class=\"sd\">        global.set $global))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">global_</span> <span class=\"o\">=</span> <span class=\"n\">Global</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"n\">mutable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">import_object</span> <span class=\"o\">=</span> <span class=\"n\">ImportObject</span><span class=\"p\">()</span>\n<span class=\"n\">import_object</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;env&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;global&quot;</span><span class=\"p\">:</span> <span class=\"n\">global_</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">import_object</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">read_g</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">7</span>\n<span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">153</span>\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">read_g</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">153</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">write_g</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">global_</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">11</span>\n</code></pre></div>\n\n<p>etc.</p>\n"}, "wasmer.wasmer.ImportObject.__init__": {"fullname": "wasmer.wasmer.ImportObject.__init__", "modulename": "wasmer.wasmer", "qualname": "ImportObject.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.ImportObject.contains_namespace": {"fullname": "wasmer.wasmer.ImportObject.contains_namespace", "modulename": "wasmer.wasmer", "qualname": "ImportObject.contains_namespace", "type": "function", "doc": "<p>Checks whether the import object contains a specific namespace.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">ImportObject</span>\n\n<span class=\"n\">import_object</span> <span class=\"o\">=</span> <span class=\"n\">ImportObject</span><span class=\"p\">()</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">import_object</span><span class=\"o\">.</span><span class=\"n\">contains_namespace</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n</code></pre></div>\n", "parameters": ["self", "namespace_name"], "funcdef": "def"}, "wasmer.wasmer.ImportObject.to_dict": {"fullname": "wasmer.wasmer.ImportObject.to_dict", "modulename": "wasmer.wasmer", "qualname": "ImportObject.to_dict", "type": "function", "doc": "<p>Gets a Python dictionary from an <code>ImportObject</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "wasmer.wasmer.ImportObject.register": {"fullname": "wasmer.wasmer.ImportObject.register", "modulename": "wasmer.wasmer", "qualname": "ImportObject.register", "type": "function", "doc": "<p>Registers a set of <code>Function</code>, <code>Memory</code>, <code>Global</code> or <code>Table</code>\nto a particular namespace.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">ImportObject</span><span class=\"p\">,</span> <span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"n\">import_object</span> <span class=\"o\">=</span> <span class=\"n\">ImportObject</span><span class=\"p\">()</span>\n<span class=\"n\">import_object</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;env&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">:</span> <span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;memory&quot;</span><span class=\"p\">:</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self", "namespace_name", "namespace"], "funcdef": "def"}, "wasmer.wasmer.Instance": {"fullname": "wasmer.wasmer.Instance", "modulename": "wasmer.wasmer", "qualname": "Instance", "type": "class", "doc": "<p>A WebAssembly instance is a stateful, executable instance of a\nWebAssembly <code>Module</code>.</p>\n\n<p>Instance objects contain all the exported WebAssembly functions,\nmemories, tables and globals that allow interacting with\nWebAssembly.</p>\n\n<p>Specification: https://webassembly.github.io/spec/core/exec/runtime.html#module-instances</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>Example without an import object. The following creates a module\nwith a <code>sum</code> exported function that sum two integers.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">Store</span><span class=\"p\">(),</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (type (func (param i32 i32) (result i32)))</span>\n<span class=\"sd\">      (func (type 0)</span>\n<span class=\"sd\">        local.get 0</span>\n<span class=\"sd\">        local.get 1</span>\n<span class=\"sd\">        i32.add)</span>\n<span class=\"sd\">      (export &quot;sum&quot; (func 0)))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n</code></pre></div>\n\n<p>Example with an import object. The following creates a module that\n(i) imports a <code>sum</code> function from the <code>math</code> namespace, and (ii)\nexports a <code>add_one</code> function that adds 1 to any given integer (by\nusing the <code>math.sum</code> function).</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdict</span>\n\n<span class=\"c1\"># Let&#39;s define the `sum` function!</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"c1\"># Let&#39;s build a store, as usual.</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Let&#39;s compile the WebAssembly module.</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">store</span><span class=\"p\">,</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (import &quot;math&quot; &quot;sum&quot; (func $sum (param i32 i32) (result i32)))</span>\n<span class=\"sd\">      (func (export &quot;add_one&quot;) (param i32) (result i32)</span>\n<span class=\"sd\">        local.get 0</span>\n<span class=\"sd\">        i32.const 1</span>\n<span class=\"sd\">        call $sum))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Now, let&#39;s create an import object, and register the `sum`</span>\n<span class=\"c1\"># function.</span>\n<span class=\"n\">import_object</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">)</span>\n<span class=\"n\">import_object</span><span class=\"p\">[</span><span class=\"s2\">&quot;math&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Here we go, let&#39;s instantiate the module with the import object!</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">import_object</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Let&#39;s test it!</span>\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">add_one</span><span class=\"p\">(</span><span class=\"mi\">41</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Instance.__init__": {"fullname": "wasmer.wasmer.Instance.__init__", "modulename": "wasmer.wasmer", "qualname": "Instance.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Instance.exports": {"fullname": "wasmer.wasmer.Instance.exports", "modulename": "wasmer.wasmer", "qualname": "Instance.exports", "type": "variable", "doc": "<p>The exports of the instance, as an object of kind <code>Exports</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>See the <code>Exports</code> class.</p>\n"}, "wasmer.wasmer.Buffer": {"fullname": "wasmer.wasmer.Buffer", "modulename": "wasmer.wasmer", "qualname": "Buffer", "type": "class", "doc": "<p>Represents a read-and-write buffer over data of a memory.</p>\n\n<p>It is built by the <code>Memory.buffer</code> getter.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/buffer.html\">Python buffer protocol</a>, so it\nis possible to read and write bytes with <a href=\"https://docs.python.org/3/library/stdtypes.html#bytes\"><code>bytes</code></a>,\n<a href=\"https://docs.python.org/3/library/stdtypes.html#bytearray\"><code>bytearray</code></a> or <a href=\"https://docs.python.org/3/library/stdtypes.html?#memoryview\"><code>memoryview</code></a>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Memory</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">,</span> <span class=\"n\">Store</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Let&#39;s write data with a `Int8Array` view for example.</span>\n<span class=\"n\">int8</span> <span class=\"o\">=</span> <span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">int8_view</span><span class=\"p\">()</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0x57</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0x61</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0x73</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0x6d</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0x65</span>\n<span class=\"n\">int8</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0x72</span>\n\n<span class=\"c1\"># Let&#39;s read data with a `Buffer` for example.</span>\n<span class=\"n\">byte_array</span> <span class=\"o\">=</span> <span class=\"nb\">bytearray</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">byte_array</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;</span><span class=\"se\">\\x01\\x02\\x03</span><span class=\"s1\">&#39;</span>\n<span class=\"k\">assert</span> <span class=\"n\">byte_array</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"mi\">9</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Wasmer&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Buffer.__init__": {"fullname": "wasmer.wasmer.Buffer.__init__", "modulename": "wasmer.wasmer", "qualname": "Buffer.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Float32Array": {"fullname": "wasmer.wasmer.Float32Array", "modulename": "wasmer.wasmer", "qualname": "Float32Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Float32Array.__init__": {"fullname": "wasmer.wasmer.Float32Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Float32Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Float32Array.bytes_per_element": {"fullname": "wasmer.wasmer.Float32Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Float32Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Float64Array": {"fullname": "wasmer.wasmer.Float64Array", "modulename": "wasmer.wasmer", "qualname": "Float64Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Float64Array.__init__": {"fullname": "wasmer.wasmer.Float64Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Float64Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Float64Array.bytes_per_element": {"fullname": "wasmer.wasmer.Float64Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Float64Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Int16Array": {"fullname": "wasmer.wasmer.Int16Array", "modulename": "wasmer.wasmer", "qualname": "Int16Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Int16Array.__init__": {"fullname": "wasmer.wasmer.Int16Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Int16Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Int16Array.bytes_per_element": {"fullname": "wasmer.wasmer.Int16Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Int16Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Int32Array": {"fullname": "wasmer.wasmer.Int32Array", "modulename": "wasmer.wasmer", "qualname": "Int32Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Int32Array.__init__": {"fullname": "wasmer.wasmer.Int32Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Int32Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Int32Array.bytes_per_element": {"fullname": "wasmer.wasmer.Int32Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Int32Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Int64Array": {"fullname": "wasmer.wasmer.Int64Array", "modulename": "wasmer.wasmer", "qualname": "Int64Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Int64Array.__init__": {"fullname": "wasmer.wasmer.Int64Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Int64Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Int64Array.bytes_per_element": {"fullname": "wasmer.wasmer.Int64Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Int64Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Int8Array": {"fullname": "wasmer.wasmer.Int8Array", "modulename": "wasmer.wasmer", "qualname": "Int8Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Int8Array.__init__": {"fullname": "wasmer.wasmer.Int8Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Int8Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Int8Array.bytes_per_element": {"fullname": "wasmer.wasmer.Int8Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Int8Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Uint16Array": {"fullname": "wasmer.wasmer.Uint16Array", "modulename": "wasmer.wasmer", "qualname": "Uint16Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Uint16Array.__init__": {"fullname": "wasmer.wasmer.Uint16Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Uint16Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"fullname": "wasmer.wasmer.Uint16Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Uint16Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Uint32Array": {"fullname": "wasmer.wasmer.Uint32Array", "modulename": "wasmer.wasmer", "qualname": "Uint32Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Uint32Array.__init__": {"fullname": "wasmer.wasmer.Uint32Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Uint32Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"fullname": "wasmer.wasmer.Uint32Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Uint32Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Uint64Array": {"fullname": "wasmer.wasmer.Uint64Array", "modulename": "wasmer.wasmer", "qualname": "Uint64Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Uint64Array.__init__": {"fullname": "wasmer.wasmer.Uint64Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Uint64Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"fullname": "wasmer.wasmer.Uint64Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Uint64Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Uint8Array": {"fullname": "wasmer.wasmer.Uint8Array", "modulename": "wasmer.wasmer", "qualname": "Uint8Array", "type": "class", "doc": "<p>Represents a read-and-write view over the data of a\nmemory.</p>\n\n<p>It is built by the <code>Memory.uint8_view</code> and siblings getters.</p>\n\n<p>It implements the <a href=\"https://docs.python.org/3/c-api/mapping.html\">Python mapping\nprotocol</a>, so it is possible to read and\nwrite bytes with a standard Python API.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This is an example for the <code>Uint8Array</code> view, but it is\nthe same for its siblings!</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Uint8Array</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"n\">pointer</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">()</span>\n<span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">uint8_view</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pointer</span><span class=\"p\">)</span>\n<span class=\"n\">nth</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">!=</span> <span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">]):</span>\n    <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">])</span>\n    <span class=\"n\">nth</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">string</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hello, World!&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Uint8Array.__init__": {"fullname": "wasmer.wasmer.Uint8Array.__init__", "modulename": "wasmer.wasmer", "qualname": "Uint8Array.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"fullname": "wasmer.wasmer.Uint8Array.bytes_per_element", "modulename": "wasmer.wasmer", "qualname": "Uint8Array.bytes_per_element", "type": "variable", "doc": "<p>Gets the number of bytes per element.</p>\n"}, "wasmer.wasmer.Module": {"fullname": "wasmer.wasmer.Module", "modulename": "wasmer.wasmer", "qualname": "Module", "type": "class", "doc": "<p>A WebAssembly module contains stateless WebAssembly code that has\nalready been compiled and can be instantiated multiple times.</p>\n\n<p>Creates a new WebAssembly Module given the configuration\nin the store.</p>\n\n<p>If the provided bytes are not WebAssembly-like (start with\n<code>b\"\\0asm\"</code>), this function will try to to convert the bytes\nassuming they correspond to the WebAssembly text format.</p>\n\n<h2 id=\"security\">Security</h2>\n\n<p>Before the code is compiled, it will be validated using the store\nfeatures.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Let&#39;s compile WebAssembly from bytes.</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/tests.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Let&#39;s compile WebAssembly from WAT.</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(module)&#39;</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Module.__init__": {"fullname": "wasmer.wasmer.Module.__init__", "modulename": "wasmer.wasmer", "qualname": "Module.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Module.validate": {"fullname": "wasmer.wasmer.Module.validate", "modulename": "wasmer.wasmer", "qualname": "Module.validate", "type": "function", "doc": "<p>Validates a new WebAssembly Module given the configuration\nin the <code>Store</code>.</p>\n\n<p>This validation is normally pretty fast and checks the enabled\nWebAssembly features in the <code>Store</code> engine to assure deterministic\nvalidation of the <code>Module</code>.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"n\">wasm_bytes</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["bytes"], "funcdef": "def"}, "wasmer.wasmer.Module.custom_sections": {"fullname": "wasmer.wasmer.Module.custom_sections", "modulename": "wasmer.wasmer", "qualname": "Module.custom_sections", "type": "function", "doc": "<p>Get the custom sections of the module given a <code>name</code>.</p>\n\n<h2 id=\"important\">Important</h2>\n\n<p>Following the WebAssembly specification, one name can have\nmultiple custom sections. That's why a list of bytes is\nreturned rather than bytes.</p>\n\n<p>Consequently, the empty list represents the absence of a\ncustom section for the given name.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/custom_sections.wasm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">custom_sections</span><span class=\"p\">(</span><span class=\"s1\">&#39;easter_egg&#39;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">&#39;Wasmer&#39;</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">custom_sections</span><span class=\"p\">(</span><span class=\"s1\">&#39;hello&#39;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">&#39;World!&#39;</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">custom_sections</span><span class=\"p\">(</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[]</span>\n</code></pre></div>\n", "parameters": ["self", "name"], "funcdef": "def"}, "wasmer.wasmer.Module.serialize": {"fullname": "wasmer.wasmer.Module.serialize", "modulename": "wasmer.wasmer", "qualname": "Module.serialize", "type": "function", "doc": "<p>Serializes a module into a binary representation that the\n<code>Engine</code> can later process via <code>Module.deserialize</code>.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">Store</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;(module)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">serialized_module</span> <span class=\"o\">=</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">serialize</span><span class=\"p\">()</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">serialized_module</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">bytes</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "wasmer.wasmer.Module.deserialize": {"fullname": "wasmer.wasmer.Module.deserialize", "modulename": "wasmer.wasmer", "qualname": "Module.deserialize", "type": "function", "doc": "<p>Deserializes a serialized module binary into a <code>Module</code>.</p>\n\n<p><strong>Note</strong>: the module has to be serialized before with the\n<code>serialize</code> method.</p>\n\n<h2 id=\"safety\">Safety</h2>\n\n<p>This function is inherently <strong>unsafe</strong> as the provided bytes:</p>\n\n<ol>\n<li>Are going to be deserialized directly into Rust objects.</li>\n<li>Contains the function assembly bodies and, if intercepted,\na malicious actor could inject code into executable\nmemory.</li>\n</ol>\n\n<p>And as such, the <code>deserialize</code> method is unsafe.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">store</span><span class=\"p\">,</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (func (export &quot;function&quot;) (param i32 i64)))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">serialized_module</span> <span class=\"o\">=</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">serialize</span><span class=\"p\">()</span>\n\n<span class=\"k\">del</span> <span class=\"n\">module</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">deserialize</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">serialized_module</span><span class=\"p\">)</span>\n\n<span class=\"k\">del</span> <span class=\"n\">serialized_module</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self", "bytes"], "funcdef": "def"}, "wasmer.wasmer.Module.exports": {"fullname": "wasmer.wasmer.Module.exports", "modulename": "wasmer.wasmer", "qualname": "Module.exports", "type": "variable", "doc": "<p>Returns a list of <code>ExportType</code> objects, which represents all\nthe exports of this module.</p>\n\n<p>The order of the exports is guaranteed to be the same as in\nthe WebAssembly bytecode.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>See the <code>ExportType</code> class to learn more.</p>\n"}, "wasmer.wasmer.Module.imports": {"fullname": "wasmer.wasmer.Module.imports", "modulename": "wasmer.wasmer", "qualname": "Module.imports", "type": "variable", "doc": "<p>Returns a list of <code>ImportType</code> objects, which represents all\nthe imports of this module.</p>\n\n<p>The order of the imports is guaranteed to be the same as in\nthe WebAssembly bytecode.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>See the <code>ImportType</code> class to learn more.</p>\n"}, "wasmer.wasmer.Module.name": {"fullname": "wasmer.wasmer.Module.name", "modulename": "wasmer.wasmer", "qualname": "Module.name", "type": "variable", "doc": "<p>Get or set the current name of the module.</p>\n\n<p>This name is normally set in the WebAssembly bytecode by some\ncompilers, but can be also overwritten.</p>\n\n<p>Not all modules have a name.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Module with an existing name.</span>\n<span class=\"k\">assert</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(module $moduleName)&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;moduleName&#39;</span>\n\n<span class=\"c1\"># Module with no name.</span>\n<span class=\"k\">assert</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(module)&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"kc\">None</span>\n\n<span class=\"c1\"># Change the module&#39;s name.</span>\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(module $moduleName)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hello&#39;</span>\n<span class=\"k\">assert</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;hello&#39;</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Store": {"fullname": "wasmer.wasmer.Store", "modulename": "wasmer.wasmer", "qualname": "Store", "type": "class", "doc": "<p>The store represents all global state that can be manipulated by\nWebAssembly programs. It consists of the runtime representation of\nall instances of functions, tables, memories, and globals that\nhave been allocated during the lifetime of the abstract machine.</p>\n\n<p>The <code>Store</code> holds the engine (that is \u2014amongst many things\u2014 used\nto compile the WebAssembly bytes into a valid module artifact), in\naddition to the <code>Tunables</code> (that are used to create the memories,\ntables and globals). The engine comes from the <code>wasmer.engine</code>\nmodule.</p>\n\n<p>Specification: https://webassembly.github.io/spec/core/exec/runtime.html#store</p>\n\n<p>Read the documentation of the <code>engine</code> submodule to learn more.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>Use the Universal engine with no compiler (headless mode):</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">Store</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">Universal</span><span class=\"p\">())</span>\n</code></pre></div>\n\n<p>Use the Universal engine with the LLVM compiler:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">Store</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wasmer_compiler_llvm</span> <span class=\"kn\">import</span> <span class=\"n\">Compiler</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">Universal</span><span class=\"p\">(</span><span class=\"n\">Compiler</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<p>If the store is built without an engine, the Universal engine will be\nused, with the first compiler found in this order:\n<code>compiler_compiler_cranelift</code>, <code>compiler_compiler_llvm</code>,\n<code>compiler_compiler_singlepass</code>, otherwise it will run in headless\nmode.</p>\n"}, "wasmer.wasmer.Store.__init__": {"fullname": "wasmer.wasmer.Store.__init__", "modulename": "wasmer.wasmer", "qualname": "Store.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Store.compiler_name": {"fullname": "wasmer.wasmer.Store.compiler_name", "modulename": "wasmer.wasmer", "qualname": "Store.compiler_name", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.Store.engine_name": {"fullname": "wasmer.wasmer.Store.engine_name", "modulename": "wasmer.wasmer", "qualname": "Store.engine_name", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.ExportType": {"fullname": "wasmer.wasmer.ExportType", "modulename": "wasmer.wasmer", "qualname": "ExportType", "type": "class", "doc": "<p>Represents the type of a module's export (not to be confused with\nan export of an instance). It is usually built from the\n<code>Module.exports</code> getter.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">ExportType</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">,</span> <span class=\"n\">GlobalType</span><span class=\"p\">,</span> <span class=\"n\">TableType</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">Store</span><span class=\"p\">(),</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">      (func (export &quot;function&quot;) (param i32 i64))</span>\n<span class=\"sd\">      (global (export &quot;global&quot;) i32 (i32.const 7))</span>\n<span class=\"sd\">      (table (export &quot;table&quot;) 0 funcref)</span>\n<span class=\"sd\">      (memory (export &quot;memory&quot;) 1))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">exports</span> <span class=\"o\">=</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">exports</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ExportType</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;function&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">params</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I64</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">results</span> <span class=\"o\">==</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;global&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">GlobalType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">mutable</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;table&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">TableType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">FUNC_REF</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">minimum</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">maximum</span> <span class=\"o\">==</span> <span class=\"kc\">None</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;memory&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">minimum</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">maximum</span> <span class=\"o\">==</span> <span class=\"kc\">None</span>\n<span class=\"k\">assert</span> <span class=\"n\">exports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">shared</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n</code></pre></div>\n"}, "wasmer.wasmer.ExportType.__init__": {"fullname": "wasmer.wasmer.ExportType.__init__", "modulename": "wasmer.wasmer", "qualname": "ExportType.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.ExportType.type": {"fullname": "wasmer.wasmer.ExportType.type", "modulename": "wasmer.wasmer", "qualname": "ExportType.type", "type": "variable", "doc": "<p>The type of the export. Possible values are: <code>FunctionType</code>,\n<code>GlobalType</code>, <code>TableType</code> and <code>MemoryType</code>.</p>\n"}, "wasmer.wasmer.ExportType.name": {"fullname": "wasmer.wasmer.ExportType.name", "modulename": "wasmer.wasmer", "qualname": "ExportType.name", "type": "variable", "doc": "<p>The name of the export.</p>\n"}, "wasmer.wasmer.FunctionType": {"fullname": "wasmer.wasmer.FunctionType", "modulename": "wasmer.wasmer", "qualname": "FunctionType", "type": "class", "doc": "<p>Represents the signature of a function that is either implemented\nin WebAssembly module or exposed to WebAssembly by the host.</p>\n\n<p>WebAssembly functions can have 0 or more parameters and results.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">FunctionType</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"c1\"># Type: (i32, i32) -&gt; i32</span>\n<span class=\"n\">function_type</span> <span class=\"o\">=</span> <span class=\"n\">FunctionType</span><span class=\"p\">(</span>\n    <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">],</span>\n    <span class=\"n\">results</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.FunctionType.__init__": {"fullname": "wasmer.wasmer.FunctionType.__init__", "modulename": "wasmer.wasmer", "qualname": "FunctionType.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.FunctionType.params": {"fullname": "wasmer.wasmer.FunctionType.params", "modulename": "wasmer.wasmer", "qualname": "FunctionType.params", "type": "variable", "doc": "<p>Parameters, i.e. inputs, of the function.</p>\n"}, "wasmer.wasmer.FunctionType.results": {"fullname": "wasmer.wasmer.FunctionType.results", "modulename": "wasmer.wasmer", "qualname": "FunctionType.results", "type": "variable", "doc": "<p>Results, i.e. outputs, of the function.</p>\n"}, "wasmer.wasmer.GlobalType": {"fullname": "wasmer.wasmer.GlobalType", "modulename": "wasmer.wasmer", "qualname": "GlobalType", "type": "class", "doc": "<p>A descriptor for a WebAssembly global.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">GlobalType</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"c1\"># Describes a global of kind `i32` which is immutable.</span>\n<span class=\"n\">global_type</span> <span class=\"o\">=</span> <span class=\"n\">GlobalType</span><span class=\"p\">(</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">mutable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.GlobalType.__init__": {"fullname": "wasmer.wasmer.GlobalType.__init__", "modulename": "wasmer.wasmer", "qualname": "GlobalType.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.GlobalType.type": {"fullname": "wasmer.wasmer.GlobalType.type", "modulename": "wasmer.wasmer", "qualname": "GlobalType.type", "type": "variable", "doc": "<p>The type of the value stored in the global.</p>\n"}, "wasmer.wasmer.GlobalType.mutable": {"fullname": "wasmer.wasmer.GlobalType.mutable", "modulename": "wasmer.wasmer", "qualname": "GlobalType.mutable", "type": "variable", "doc": "<p>A flag indicating whether the value may change at runtime.</p>\n"}, "wasmer.wasmer.ImportType": {"fullname": "wasmer.wasmer.ImportType", "modulename": "wasmer.wasmer", "qualname": "ImportType", "type": "class", "doc": "<p>Represents the type of a module's import. It is usually built from\nthe <code>Module.imports</code> getter.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Store</span><span class=\"p\">,</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">ImportType</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">,</span> <span class=\"n\">GlobalType</span><span class=\"p\">,</span> <span class=\"n\">TableType</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span>\n    <span class=\"n\">Store</span><span class=\"p\">(),</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    (module</span>\n<span class=\"sd\">    (import &quot;ns&quot; &quot;function&quot; (func))</span>\n<span class=\"sd\">    (import &quot;ns&quot; &quot;global&quot; (global f32))</span>\n<span class=\"sd\">    (import &quot;ns&quot; &quot;table&quot; (table 1 2 anyfunc))</span>\n<span class=\"sd\">    (import &quot;ns&quot; &quot;memory&quot; (memory 3 4)))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">imports</span> <span class=\"o\">=</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">imports</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ImportType</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">module</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ns&quot;</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;function&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">FunctionType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">params</span> <span class=\"o\">==</span> <span class=\"p\">[]</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">results</span> <span class=\"o\">==</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">module</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ns&quot;</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;global&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">GlobalType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">F32</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">mutable</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">module</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ns&quot;</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;table&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">TableType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">FUNC_REF</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">minimum</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">maximum</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">module</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ns&quot;</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;memory&quot;</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">MemoryType</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">minimum</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">maximum</span> <span class=\"o\">==</span> <span class=\"mi\">4</span>\n<span class=\"k\">assert</span> <span class=\"n\">imports</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">shared</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n</code></pre></div>\n"}, "wasmer.wasmer.ImportType.__init__": {"fullname": "wasmer.wasmer.ImportType.__init__", "modulename": "wasmer.wasmer", "qualname": "ImportType.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.ImportType.type": {"fullname": "wasmer.wasmer.ImportType.type", "modulename": "wasmer.wasmer", "qualname": "ImportType.type", "type": "variable", "doc": "<p>The type of the import. Possible values are: <code>FunctionType</code>,\n<code>GlobalType</code>, <code>TableType</code> and <code>MemoryType</code>.</p>\n"}, "wasmer.wasmer.ImportType.module": {"fullname": "wasmer.wasmer.ImportType.module", "modulename": "wasmer.wasmer", "qualname": "ImportType.module", "type": "variable", "doc": "<p>The namespace name (also known as module name).</p>\n"}, "wasmer.wasmer.ImportType.name": {"fullname": "wasmer.wasmer.ImportType.name", "modulename": "wasmer.wasmer", "qualname": "ImportType.name", "type": "variable", "doc": "<p>The name of the import.</p>\n"}, "wasmer.wasmer.MemoryType": {"fullname": "wasmer.wasmer.MemoryType", "modulename": "wasmer.wasmer", "qualname": "MemoryType", "type": "class", "doc": "<p>A descriptor for a WebAssembly memory type.</p>\n\n<p>Memories are described in units of pages (64Kb) and represent\ncontiguous chunks of addressable memory.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">MemoryType</span>\n\n<span class=\"n\">memory_type</span> <span class=\"o\">=</span> <span class=\"n\">MemoryType</span><span class=\"p\">(</span>\n    <span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">shared</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.MemoryType.__init__": {"fullname": "wasmer.wasmer.MemoryType.__init__", "modulename": "wasmer.wasmer", "qualname": "MemoryType.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.MemoryType.maximum": {"fullname": "wasmer.wasmer.MemoryType.maximum", "modulename": "wasmer.wasmer", "qualname": "MemoryType.maximum", "type": "variable", "doc": "<p>The maximum number of pages in the memory. It is optional.</p>\n"}, "wasmer.wasmer.MemoryType.minimum": {"fullname": "wasmer.wasmer.MemoryType.minimum", "modulename": "wasmer.wasmer", "qualname": "MemoryType.minimum", "type": "variable", "doc": "<p>The minimum number of pages in the memory.</p>\n"}, "wasmer.wasmer.MemoryType.shared": {"fullname": "wasmer.wasmer.MemoryType.shared", "modulename": "wasmer.wasmer", "qualname": "MemoryType.shared", "type": "variable", "doc": "<p>Whether the memory may be shared between multiple threads.</p>\n"}, "wasmer.wasmer.TableType": {"fullname": "wasmer.wasmer.TableType", "modulename": "wasmer.wasmer", "qualname": "TableType", "type": "class", "doc": "<p>A descriptor for a table in a WebAssembly module.</p>\n\n<p>Tables are contiguous chunks of a specific element, typically a\n<code>funcref</code> or <code>externref</code>. The most common use for tables is a\nfunction table through which <code>call_indirect</code> can invoke other\nfunctions.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">TableType</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">table_type</span> <span class=\"o\">=</span> <span class=\"n\">TableType</span><span class=\"p\">(</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">I32</span><span class=\"p\">,</span> <span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">maximum</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.TableType.__init__": {"fullname": "wasmer.wasmer.TableType.__init__", "modulename": "wasmer.wasmer", "qualname": "TableType.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.TableType.minimum": {"fullname": "wasmer.wasmer.TableType.minimum", "modulename": "wasmer.wasmer", "qualname": "TableType.minimum", "type": "variable", "doc": "<p>The minimum number of elements in the table.</p>\n"}, "wasmer.wasmer.TableType.type": {"fullname": "wasmer.wasmer.TableType.type", "modulename": "wasmer.wasmer", "qualname": "TableType.type", "type": "variable", "doc": "<p>The type of data stored in elements of the table.</p>\n"}, "wasmer.wasmer.TableType.maximum": {"fullname": "wasmer.wasmer.TableType.maximum", "modulename": "wasmer.wasmer", "qualname": "TableType.maximum", "type": "variable", "doc": "<p>The maximum number of elements in the table.</p>\n"}, "wasmer.wasmer.Value": {"fullname": "wasmer.wasmer.Value", "modulename": "wasmer.wasmer", "qualname": "Value", "type": "class", "doc": "<p>Represents a WebAssembly value of a specific type.</p>\n\n<p>Most of the time, the types for WebAssembly values will be\ninferred. When it's not possible, the <code>Value</code> class is necessary.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "wasmer.wasmer.Value.__init__": {"fullname": "wasmer.wasmer.Value.__init__", "modulename": "wasmer.wasmer", "qualname": "Value.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer.wasmer.Value.i32": {"fullname": "wasmer.wasmer.Value.i32", "modulename": "wasmer.wasmer", "qualname": "Value.i32", "type": "function", "doc": "<p>Build a WebAssembly <code>i32</code> value.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["value"], "funcdef": "def"}, "wasmer.wasmer.Value.i64": {"fullname": "wasmer.wasmer.Value.i64", "modulename": "wasmer.wasmer", "qualname": "Value.i64", "type": "function", "doc": "<p>Build a WebAssembly <code>i64</code> value.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["value"], "funcdef": "def"}, "wasmer.wasmer.Value.f32": {"fullname": "wasmer.wasmer.Value.f32", "modulename": "wasmer.wasmer", "qualname": "Value.f32", "type": "function", "doc": "<p>Build a WebAssembly <code>f32</code> value.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">(</span><span class=\"mf\">4.2</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["value"], "funcdef": "def"}, "wasmer.wasmer.Value.f64": {"fullname": "wasmer.wasmer.Value.f64", "modulename": "wasmer.wasmer", "qualname": "Value.f64", "type": "function", "doc": "<p>Build a WebAssembly <code>f64</code> value.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">(</span><span class=\"mf\">4.2</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["value"], "funcdef": "def"}, "wasmer.wasmer.Value.v128": {"fullname": "wasmer.wasmer.Value.v128", "modulename": "wasmer.wasmer", "qualname": "Value.v128", "type": "function", "doc": "<p>Build a WebAssembly <code>v128</code> value.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">Value</span><span class=\"o\">.</span><span class=\"n\">v128</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["value"], "funcdef": "def"}, "wasmer.wasmer.Type": {"fullname": "wasmer.wasmer.Type", "modulename": "wasmer.wasmer", "qualname": "Type", "type": "class", "doc": "<p>An enumeration.</p>\n"}, "wasmer.wasmer.Type.I32": {"fullname": "wasmer.wasmer.Type.I32", "modulename": "wasmer.wasmer", "qualname": "Type.I32", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.Type.I64": {"fullname": "wasmer.wasmer.Type.I64", "modulename": "wasmer.wasmer", "qualname": "Type.I64", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.Type.F32": {"fullname": "wasmer.wasmer.Type.F32", "modulename": "wasmer.wasmer", "qualname": "Type.F32", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.Type.F64": {"fullname": "wasmer.wasmer.Type.F64", "modulename": "wasmer.wasmer", "qualname": "Type.F64", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.Type.V128": {"fullname": "wasmer.wasmer.Type.V128", "modulename": "wasmer.wasmer", "qualname": "Type.V128", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.Type.EXTERN_REF": {"fullname": "wasmer.wasmer.Type.EXTERN_REF", "modulename": "wasmer.wasmer", "qualname": "Type.EXTERN_REF", "type": "variable", "doc": "<p></p>\n"}, "wasmer.wasmer.Type.FUNC_REF": {"fullname": "wasmer.wasmer.Type.FUNC_REF", "modulename": "wasmer.wasmer", "qualname": "Type.FUNC_REF", "type": "variable", "doc": "<p></p>\n"}, "wasmer_compiler_cranelift": {"fullname": "wasmer_compiler_cranelift", "modulename": "wasmer_compiler_cranelift", "qualname": "", "type": "module", "doc": "<p>The Cranelift compiler, designed for the <code>wasmer</code> Python package\n(a WebAssembly runtime).</p>\n\n<p>Please check the documentation of <code>wasmer.engine</code> to learn more.</p>\n"}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"fullname": "wasmer_compiler_cranelift.wasmer_compiler_cranelift", "modulename": "wasmer_compiler_cranelift.wasmer_compiler_cranelift", "qualname": "", "type": "module", "doc": "<p>The Cranelift compiler, designed for the <code>wasmer</code> Python package\n(a WebAssembly runtime).</p>\n\n<p>Please check the documentation of <code>wasmer.engine</code> to learn more.</p>\n"}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"fullname": "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler", "modulename": "wasmer_compiler_cranelift.wasmer_compiler_cranelift", "qualname": "Compiler", "type": "class", "doc": "<p>The Cranelift compiler.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">Store</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wasmer_compiler_cranelift</span> <span class=\"kn\">import</span> <span class=\"n\">Compiler</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"n\">Compiler</span><span class=\"p\">))</span>\n</code></pre></div>\n"}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__": {"fullname": "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__", "modulename": "wasmer_compiler_cranelift.wasmer_compiler_cranelift", "qualname": "Compiler.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"fullname": "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler", "modulename": "wasmer_compiler_cranelift.wasmer_compiler_cranelift", "qualname": "Compiler.into_opaque_compiler", "type": "function", "doc": "<p>Please don't use it. Internal use only.</p>\n", "parameters": ["unknown"], "funcdef": "def"}, "wasmer_compiler_llvm": {"fullname": "wasmer_compiler_llvm", "modulename": "wasmer_compiler_llvm", "qualname": "", "type": "module", "doc": "<p>The LLVM compiler, designed for the <code>wasmer</code> Python package (a\nWebAssembly runtime).</p>\n\n<p>Please check the documentation of <code>wasmer.engine</code> to learn more.</p>\n"}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"fullname": "wasmer_compiler_llvm.wasmer_compiler_llvm", "modulename": "wasmer_compiler_llvm.wasmer_compiler_llvm", "qualname": "", "type": "module", "doc": "<p>The LLVM compiler, designed for the <code>wasmer</code> Python package (a\nWebAssembly runtime).</p>\n\n<p>Please check the documentation of <code>wasmer.engine</code> to learn more.</p>\n"}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"fullname": "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler", "modulename": "wasmer_compiler_llvm.wasmer_compiler_llvm", "qualname": "Compiler", "type": "class", "doc": "<p>The LLVM compiler.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">Store</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wasmer_compiler_cranelift</span> <span class=\"kn\">import</span> <span class=\"n\">Compiler</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"n\">Compiler</span><span class=\"p\">))</span>\n</code></pre></div>\n"}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__": {"fullname": "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__", "modulename": "wasmer_compiler_llvm.wasmer_compiler_llvm", "qualname": "Compiler.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"fullname": "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler", "modulename": "wasmer_compiler_llvm.wasmer_compiler_llvm", "qualname": "Compiler.into_opaque_compiler", "type": "function", "doc": "<p>Please don't use it. Internal use only.</p>\n", "parameters": ["unknown"], "funcdef": "def"}, "wasmer_compiler_singlepass": {"fullname": "wasmer_compiler_singlepass", "modulename": "wasmer_compiler_singlepass", "qualname": "", "type": "module", "doc": "<p>The Singlepass compiler, designed for the <code>wasmer</code> Python package\n(a WebAssembly runtime).</p>\n\n<p>Please check the documentation of <code>wasmer.engine</code> to learn more.</p>\n"}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"fullname": "wasmer_compiler_singlepass.wasmer_compiler_singlepass", "modulename": "wasmer_compiler_singlepass.wasmer_compiler_singlepass", "qualname": "", "type": "module", "doc": "<p>The Singlepass compiler, designed for the <code>wasmer</code> Python package\n(a WebAssembly runtime).</p>\n\n<p>Please check the documentation of <code>wasmer.engine</code> to learn more.</p>\n"}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"fullname": "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler", "modulename": "wasmer_compiler_singlepass.wasmer_compiler_singlepass", "qualname": "Compiler", "type": "class", "doc": "<p>The Singlepass compiler.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">wasmer</span> <span class=\"kn\">import</span> <span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">Store</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wasmer_compiler_singlepass</span> <span class=\"kn\">import</span> <span class=\"n\">Compiler</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"n\">Compiler</span><span class=\"p\">))</span>\n</code></pre></div>\n"}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__": {"fullname": "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__", "modulename": "wasmer_compiler_singlepass.wasmer_compiler_singlepass", "qualname": "Compiler.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"fullname": "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler", "modulename": "wasmer_compiler_singlepass.wasmer_compiler_singlepass", "qualname": "Compiler.into_opaque_compiler", "type": "function", "doc": "<p>Please don't use it. Internal use only.</p>\n", "parameters": ["unknown"], "funcdef": "def"}}, "docInfo": {"wasmer": {"qualname": 0, "fullname": 1, "doc": 154}, "wasmer.wasmer": {"qualname": 0, "fullname": 2, "doc": 154}, "wasmer.wasmer.wat2wasm": {"qualname": 1, "fullname": 3, "doc": 22}, "wasmer.wasmer.wasm2wat": {"qualname": 1, "fullname": 3, "doc": 21}, "wasmer.wasmer.Exports": {"qualname": 1, "fullname": 3, "doc": 102}, "wasmer.wasmer.Exports.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.ExportsIterator": {"qualname": 1, "fullname": 3, "doc": 76}, "wasmer.wasmer.ExportsIterator.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Function": {"qualname": 1, "fullname": 3, "doc": 221}, "wasmer.wasmer.Function.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Function.type": {"qualname": 2, "fullname": 4, "doc": 71}, "wasmer.wasmer.Global": {"qualname": 1, "fullname": 3, "doc": 76}, "wasmer.wasmer.Global.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Global.type": {"qualname": 2, "fullname": 4, "doc": 35}, "wasmer.wasmer.Global.value": {"qualname": 2, "fullname": 4, "doc": 32}, "wasmer.wasmer.Global.mutable": {"qualname": 2, "fullname": 4, "doc": 24}, "wasmer.wasmer.Memory": {"qualname": 1, "fullname": 3, "doc": 109}, "wasmer.wasmer.Memory.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Memory.grow": {"qualname": 2, "fullname": 4, "doc": 33}, "wasmer.wasmer.Memory.uint8_view": {"qualname": 2, "fullname": 4, "doc": 39}, "wasmer.wasmer.Memory.int8_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.uint16_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.int16_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.uint32_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.int32_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.uint64_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.int64_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.float32_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.float64_view": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Memory.type": {"qualname": 2, "fullname": 4, "doc": 46}, "wasmer.wasmer.Memory.data_size": {"qualname": 2, "fullname": 4, "doc": 24}, "wasmer.wasmer.Memory.size": {"qualname": 2, "fullname": 4, "doc": 24}, "wasmer.wasmer.Memory.buffer": {"qualname": 2, "fullname": 4, "doc": 34}, "wasmer.wasmer.Table": {"qualname": 1, "fullname": 3, "doc": 29}, "wasmer.wasmer.Table.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Table.type": {"qualname": 2, "fullname": 4, "doc": 50}, "wasmer.wasmer.Table.size": {"qualname": 2, "fullname": 4, "doc": 35}, "wasmer.wasmer.ImportObject": {"qualname": 1, "fullname": 3, "doc": 338}, "wasmer.wasmer.ImportObject.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.ImportObject.contains_namespace": {"qualname": 2, "fullname": 4, "doc": 20}, "wasmer.wasmer.ImportObject.to_dict": {"qualname": 2, "fullname": 4, "doc": 4}, "wasmer.wasmer.ImportObject.register": {"qualname": 2, "fullname": 4, "doc": 50}, "wasmer.wasmer.Instance": {"qualname": 1, "fullname": 3, "doc": 229}, "wasmer.wasmer.Instance.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Instance.exports": {"qualname": 2, "fullname": 4, "doc": 9}, "wasmer.wasmer.Buffer": {"qualname": 1, "fullname": 3, "doc": 99}, "wasmer.wasmer.Buffer.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Float32Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Float32Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Float32Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Float64Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Float64Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Float64Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Int16Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Int16Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Int16Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Int32Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Int32Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Int32Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Int64Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Int64Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Int64Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Int8Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Int8Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Int8Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Uint16Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Uint16Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Uint32Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Uint32Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Uint64Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Uint64Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Uint8Array": {"qualname": 1, "fullname": 3, "doc": 82}, "wasmer.wasmer.Uint8Array.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.Module": {"qualname": 1, "fullname": 3, "doc": 75}, "wasmer.wasmer.Module.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Module.validate": {"qualname": 2, "fullname": 4, "doc": 31}, "wasmer.wasmer.Module.custom_sections": {"qualname": 2, "fullname": 4, "doc": 71}, "wasmer.wasmer.Module.serialize": {"qualname": 2, "fullname": 4, "doc": 30}, "wasmer.wasmer.Module.deserialize": {"qualname": 2, "fullname": 4, "doc": 78}, "wasmer.wasmer.Module.exports": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Module.imports": {"qualname": 2, "fullname": 4, "doc": 19}, "wasmer.wasmer.Module.name": {"qualname": 2, "fullname": 4, "doc": 67}, "wasmer.wasmer.Store": {"qualname": 1, "fullname": 3, "doc": 106}, "wasmer.wasmer.Store.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Store.compiler_name": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Store.engine_name": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.ExportType": {"qualname": 1, "fullname": 3, "doc": 187}, "wasmer.wasmer.ExportType.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.ExportType.type": {"qualname": 2, "fullname": 4, "doc": 8}, "wasmer.wasmer.ExportType.name": {"qualname": 2, "fullname": 4, "doc": 2}, "wasmer.wasmer.FunctionType": {"qualname": 1, "fullname": 3, "doc": 35}, "wasmer.wasmer.FunctionType.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.FunctionType.params": {"qualname": 2, "fullname": 4, "doc": 4}, "wasmer.wasmer.FunctionType.results": {"qualname": 2, "fullname": 4, "doc": 4}, "wasmer.wasmer.GlobalType": {"qualname": 1, "fullname": 3, "doc": 19}, "wasmer.wasmer.GlobalType.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.GlobalType.type": {"qualname": 2, "fullname": 4, "doc": 4}, "wasmer.wasmer.GlobalType.mutable": {"qualname": 2, "fullname": 4, "doc": 6}, "wasmer.wasmer.ImportType": {"qualname": 1, "fullname": 3, "doc": 216}, "wasmer.wasmer.ImportType.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.ImportType.type": {"qualname": 2, "fullname": 4, "doc": 8}, "wasmer.wasmer.ImportType.module": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.ImportType.name": {"qualname": 2, "fullname": 4, "doc": 2}, "wasmer.wasmer.MemoryType": {"qualname": 1, "fullname": 3, "doc": 24}, "wasmer.wasmer.MemoryType.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.MemoryType.maximum": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.MemoryType.minimum": {"qualname": 2, "fullname": 4, "doc": 4}, "wasmer.wasmer.MemoryType.shared": {"qualname": 2, "fullname": 4, "doc": 6}, "wasmer.wasmer.TableType": {"qualname": 1, "fullname": 3, "doc": 34}, "wasmer.wasmer.TableType.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.TableType.minimum": {"qualname": 2, "fullname": 4, "doc": 4}, "wasmer.wasmer.TableType.type": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer.wasmer.TableType.maximum": {"qualname": 2, "fullname": 4, "doc": 4}, "wasmer.wasmer.Value": {"qualname": 1, "fullname": 3, "doc": 23}, "wasmer.wasmer.Value.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Value.i32": {"qualname": 2, "fullname": 4, "doc": 12}, "wasmer.wasmer.Value.i64": {"qualname": 2, "fullname": 4, "doc": 12}, "wasmer.wasmer.Value.f32": {"qualname": 2, "fullname": 4, "doc": 13}, "wasmer.wasmer.Value.f64": {"qualname": 2, "fullname": 4, "doc": 13}, "wasmer.wasmer.Value.v128": {"qualname": 2, "fullname": 4, "doc": 12}, "wasmer.wasmer.Type": {"qualname": 1, "fullname": 3, "doc": 1}, "wasmer.wasmer.Type.I32": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Type.I64": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Type.F32": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Type.F64": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Type.V128": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Type.EXTERN_REF": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer.wasmer.Type.FUNC_REF": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer_compiler_cranelift": {"qualname": 0, "fullname": 1, "doc": 15}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"qualname": 0, "fullname": 2, "doc": 15}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"qualname": 1, "fullname": 3, "doc": 15}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer_compiler_llvm": {"qualname": 0, "fullname": 1, "doc": 15}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"qualname": 0, "fullname": 2, "doc": 15}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"qualname": 1, "fullname": 3, "doc": 15}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"qualname": 2, "fullname": 4, "doc": 5}, "wasmer_compiler_singlepass": {"qualname": 0, "fullname": 1, "doc": 15}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"qualname": 0, "fullname": 2, "doc": 15}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"qualname": 1, "fullname": 3, "doc": 15}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"qualname": 2, "fullname": 4, "doc": 5}}, "length": 147, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}, "s": {"docs": {}, "df": 0, "m": {"2": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.wasm2wat": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Exports.__init__": {"tf": 1}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.ExportsIterator.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ExportType.__init__": {"tf": 1}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.ExportType.name": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Type.EXTERN_REF": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store.engine_name": {"tf": 1}}, "df": 1}}}}}}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"wasmer.wasmer.Exports.__init__": {"tf": 1}, "wasmer.wasmer.ExportsIterator.__init__": {"tf": 1}, "wasmer.wasmer.Function.__init__": {"tf": 1}, "wasmer.wasmer.Global.__init__": {"tf": 1}, "wasmer.wasmer.Memory.__init__": {"tf": 1}, "wasmer.wasmer.Table.__init__": {"tf": 1}, "wasmer.wasmer.ImportObject.__init__": {"tf": 1}, "wasmer.wasmer.Instance.__init__": {"tf": 1}, "wasmer.wasmer.Buffer.__init__": {"tf": 1}, "wasmer.wasmer.Float32Array.__init__": {"tf": 1}, "wasmer.wasmer.Float64Array.__init__": {"tf": 1}, "wasmer.wasmer.Int16Array.__init__": {"tf": 1}, "wasmer.wasmer.Int32Array.__init__": {"tf": 1}, "wasmer.wasmer.Int64Array.__init__": {"tf": 1}, "wasmer.wasmer.Int8Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint16Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint32Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint64Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint8Array.__init__": {"tf": 1}, "wasmer.wasmer.Module.__init__": {"tf": 1}, "wasmer.wasmer.Store.__init__": {"tf": 1}, "wasmer.wasmer.ExportType.__init__": {"tf": 1}, "wasmer.wasmer.FunctionType.__init__": {"tf": 1}, "wasmer.wasmer.GlobalType.__init__": {"tf": 1}, "wasmer.wasmer.ImportType.__init__": {"tf": 1}, "wasmer.wasmer.MemoryType.__init__": {"tf": 1}, "wasmer.wasmer.TableType.__init__": {"tf": 1}, "wasmer.wasmer.Value.__init__": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__": {"tf": 1}}, "df": 31}}}}}}}}, "f": {"3": {"2": {"docs": {"wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Type.F32": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Type.F64": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Function.__init__": {"tf": 1}, "wasmer.wasmer.Function.type": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.FunctionType.__init__": {"tf": 1}, "wasmer.wasmer.FunctionType.params": {"tf": 1}, "wasmer.wasmer.FunctionType.results": {"tf": 1}}, "df": 4}}}}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Type.FUNC_REF": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.float32_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float32Array.__init__": {"tf": 1}, "wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.float64_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Float64Array.__init__": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer.wasmer.Type": {"tf": 1}, "wasmer.wasmer.Type.I32": {"tf": 1}, "wasmer.wasmer.Type.I64": {"tf": 1}, "wasmer.wasmer.Type.F32": {"tf": 1}, "wasmer.wasmer.Type.F64": {"tf": 1}, "wasmer.wasmer.Type.V128": {"tf": 1}, "wasmer.wasmer.Type.EXTERN_REF": {"tf": 1}, "wasmer.wasmer.Type.FUNC_REF": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Table.__init__": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.TableType.__init__": {"tf": 1}, "wasmer.wasmer.TableType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 5}}}}}}}, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject.to_dict": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Global.__init__": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.GlobalType.__init__": {"tf": 1}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}}, "df": 4}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.grow": {"tf": 1}}, "df": 1}}}}, "v": {"1": {"2": {"8": {"docs": {"wasmer.wasmer.Value.v128": {"tf": 1}, "wasmer.wasmer.Type.V128": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}, "wasmer.wasmer.Value.__init__": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.__init__": {"tf": 1}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}}, "df": 17}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.MemoryType.__init__": {"tf": 1}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.MemoryType.minimum": {"tf": 1}, "wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 5}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.__init__": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.ImportType.module": {"tf": 1}}, "df": 10}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.MemoryType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.minimum": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint16_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint16Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "3": {"2": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint32_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint32Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint64_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint64Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "8": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Uint8Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}}}}, "i": {"3": {"2": {"docs": {"wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Type.I32": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Type.I64": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int16_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int16Array.__init__": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "3": {"2": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int32_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int32Array.__init__": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int64_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int64Array.__init__": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "8": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int8_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Int8Array.__init__": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Instance.__init__": {"tf": 1}, "wasmer.wasmer.Instance.exports": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.__init__": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.ImportObject.to_dict": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.ImportType": {"tf": 1}, "wasmer.wasmer.ImportType.__init__": {"tf": 1}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.ImportType.module": {"tf": 1}, "wasmer.wasmer.ImportType.name": {"tf": 1}}, "df": 5}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Memory.data_size": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.Store.__init__": {"tf": 1}, "wasmer.wasmer.Store.compiler_name": {"tf": 1}, "wasmer.wasmer.Store.engine_name": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Buffer.__init__": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store.compiler_name": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject.register": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.FunctionType.results": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.ExportType.name": {"tf": 1}, "wasmer.wasmer.ImportType.name": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.FunctionType.params": {"tf": 1}}, "df": 1}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"2": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.wasm2wat": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.wat2wasm": {"tf": 1.4142135623730951}, "wasmer.wasmer.wasm2wat": {"tf": 1.4142135623730951}, "wasmer.wasmer.Exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.Exports.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportsIterator.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.value": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.mutable": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int8_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int16_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.float32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.float64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.data_size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.to_dict": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance.exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Buffer.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.validate": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.serialize": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.deserialize": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.imports": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.name": {"tf": 1.4142135623730951}, "wasmer.wasmer.Store": {"tf": 1.4142135623730951}, "wasmer.wasmer.Store.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Store.compiler_name": {"tf": 1.4142135623730951}, "wasmer.wasmer.Store.engine_name": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType.name": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType.params": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType.results": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.module": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.name": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType.minimum": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType.shared": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType.minimum": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType.maximum": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.__init__": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.i32": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.i64": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.f32": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.f64": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.v128": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type.I32": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type.I64": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type.F32": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type.F64": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type.V128": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type.EXTERN_REF": {"tf": 1.4142135623730951}, "wasmer.wasmer.Type.FUNC_REF": {"tf": 1.4142135623730951}}, "df": 132, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1.4142135623730951}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__": {"tf": 1.4142135623730951}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "m": {"docs": {"wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1.4142135623730951}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"2": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Exports.__init__": {"tf": 1}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.ExportsIterator.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ExportType.__init__": {"tf": 1}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.ExportType.name": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Type.EXTERN_REF": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store.engine_name": {"tf": 1}}, "df": 1}}}}}}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"wasmer.wasmer.Exports.__init__": {"tf": 1}, "wasmer.wasmer.ExportsIterator.__init__": {"tf": 1}, "wasmer.wasmer.Function.__init__": {"tf": 1}, "wasmer.wasmer.Global.__init__": {"tf": 1}, "wasmer.wasmer.Memory.__init__": {"tf": 1}, "wasmer.wasmer.Table.__init__": {"tf": 1}, "wasmer.wasmer.ImportObject.__init__": {"tf": 1}, "wasmer.wasmer.Instance.__init__": {"tf": 1}, "wasmer.wasmer.Buffer.__init__": {"tf": 1}, "wasmer.wasmer.Float32Array.__init__": {"tf": 1}, "wasmer.wasmer.Float64Array.__init__": {"tf": 1}, "wasmer.wasmer.Int16Array.__init__": {"tf": 1}, "wasmer.wasmer.Int32Array.__init__": {"tf": 1}, "wasmer.wasmer.Int64Array.__init__": {"tf": 1}, "wasmer.wasmer.Int8Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint16Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint32Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint64Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint8Array.__init__": {"tf": 1}, "wasmer.wasmer.Module.__init__": {"tf": 1}, "wasmer.wasmer.Store.__init__": {"tf": 1}, "wasmer.wasmer.ExportType.__init__": {"tf": 1}, "wasmer.wasmer.FunctionType.__init__": {"tf": 1}, "wasmer.wasmer.GlobalType.__init__": {"tf": 1}, "wasmer.wasmer.ImportType.__init__": {"tf": 1}, "wasmer.wasmer.MemoryType.__init__": {"tf": 1}, "wasmer.wasmer.TableType.__init__": {"tf": 1}, "wasmer.wasmer.Value.__init__": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__": {"tf": 1}}, "df": 31}}}}}}}}, "f": {"3": {"2": {"docs": {"wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Type.F32": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Type.F64": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Function.__init__": {"tf": 1}, "wasmer.wasmer.Function.type": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.FunctionType.__init__": {"tf": 1}, "wasmer.wasmer.FunctionType.params": {"tf": 1}, "wasmer.wasmer.FunctionType.results": {"tf": 1}}, "df": 4}}}}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Type.FUNC_REF": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.float32_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float32Array.__init__": {"tf": 1}, "wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.float64_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Float64Array.__init__": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer.wasmer.Type": {"tf": 1}, "wasmer.wasmer.Type.I32": {"tf": 1}, "wasmer.wasmer.Type.I64": {"tf": 1}, "wasmer.wasmer.Type.F32": {"tf": 1}, "wasmer.wasmer.Type.F64": {"tf": 1}, "wasmer.wasmer.Type.V128": {"tf": 1}, "wasmer.wasmer.Type.EXTERN_REF": {"tf": 1}, "wasmer.wasmer.Type.FUNC_REF": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Table.__init__": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.TableType.__init__": {"tf": 1}, "wasmer.wasmer.TableType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 5}}}}}}}, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject.to_dict": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Global.__init__": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.GlobalType.__init__": {"tf": 1}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}}, "df": 4}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.grow": {"tf": 1}}, "df": 1}}}}, "v": {"1": {"2": {"8": {"docs": {"wasmer.wasmer.Value.v128": {"tf": 1}, "wasmer.wasmer.Type.V128": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}, "wasmer.wasmer.Value.__init__": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.__init__": {"tf": 1}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}}, "df": 17}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.MemoryType.__init__": {"tf": 1}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.MemoryType.minimum": {"tf": 1}, "wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 5}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.__init__": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.ImportType.module": {"tf": 1}}, "df": 10}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.MemoryType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.minimum": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint16_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint16Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "3": {"2": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint32_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint32Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint64_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint64Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "8": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Uint8Array.__init__": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}}}}, "i": {"3": {"2": {"docs": {"wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Type.I32": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Type.I64": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int16_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int16Array.__init__": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "3": {"2": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int32_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int32Array.__init__": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int64_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int64Array.__init__": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0}, "8": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.int8_view": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Int8Array.__init__": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}}, "df": 3}}}}}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Instance.__init__": {"tf": 1}, "wasmer.wasmer.Instance.exports": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.__init__": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.ImportObject.to_dict": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.ImportType": {"tf": 1}, "wasmer.wasmer.ImportType.__init__": {"tf": 1}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.ImportType.module": {"tf": 1}, "wasmer.wasmer.ImportType.name": {"tf": 1}}, "df": 5}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Memory.data_size": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.Store.__init__": {"tf": 1}, "wasmer.wasmer.Store.compiler_name": {"tf": 1}, "wasmer.wasmer.Store.engine_name": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Buffer.__init__": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.__init__": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.__init__": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.__init__": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store.compiler_name": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject.register": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.FunctionType.results": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.ExportType.name": {"tf": 1}, "wasmer.wasmer.ImportType.name": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.FunctionType.params": {"tf": 1}}, "df": 1}}}}}}}, "doc": {"root": {"0": {"docs": {"wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportObject": {"tf": 3.3166247903554}, "wasmer.wasmer.Instance": {"tf": 2}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 2.6457513110645907}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 2.449489742783178}}, "df": 21, "x": {"5": {"7": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"1": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "5": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}}, "7": {"2": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "3": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "1": {"1": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"8": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"3": {"docs": {"wasmer.wasmer.Global.value": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "7": {"docs": {"wasmer.wasmer.Memory.type": {"tf": 1}}, "df": 1}, "9": {"6": {"6": {"0": {"8": {"docs": {"wasmer.wasmer.Memory.data_size": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 2.6457513110645907}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 2}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 2.449489742783178}, "wasmer.wasmer.ImportType": {"tf": 2.6457513110645907}, "wasmer.wasmer.MemoryType": {"tf": 1}}, "df": 22}, "2": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 2.23606797749979}, "wasmer.wasmer.ImportType": {"tf": 2.8284271247461903}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}}, "df": 12}, "3": {"9": {"docs": {"wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer.wat2wasm": {"tf": 2}, "wasmer.wasmer.wasm2wat": {"tf": 2}, "wasmer.wasmer.Function": {"tf": 2.8284271247461903}, "wasmer.wasmer.Global": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory": {"tf": 2}, "wasmer.wasmer.Memory.type": {"tf": 2}, "wasmer.wasmer.Table.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 2.449489742783178}, "wasmer.wasmer.Buffer": {"tf": 2.449489742783178}, "wasmer.wasmer.Float32Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Float64Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Int16Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Int32Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Int64Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Int8Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Uint16Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Uint32Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Uint64Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Uint8Array": {"tf": 2.8284271247461903}, "wasmer.wasmer.Module": {"tf": 2.8284271247461903}, "wasmer.wasmer.Module.custom_sections": {"tf": 3.7416573867739413}, "wasmer.wasmer.Module.serialize": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.name": {"tf": 3.605551275463989}}, "df": 26}, "docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 2}, "wasmer.wasmer.ExportType": {"tf": 2.23606797749979}, "wasmer.wasmer.ImportType": {"tf": 2.8284271247461903}}, "df": 12}, "4": {"1": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1}, "2": {"docs": {"wasmer.wasmer.Global": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Global.value": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}}, "df": 11}, "docs": {"wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}}, "df": 4}, "5": {"docs": {"wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}}, "df": 2}, "6": {"4": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}, "b": {"docs": {"wasmer.wasmer.MemoryType": {"tf": 1}}, "df": 1}}}, "5": {"5": {"3": {"6": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "7": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 6}, "8": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "9": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"2": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.wasm2wat": {"tf": 1.4142135623730951}}, "df": 1}}}}, "docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 2.23606797749979}, "wasmer.wasmer": {"tf": 2.23606797749979}, "wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1.4142135623730951}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1.4142135623730951}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1}}, "df": 64, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 1}}}}}}, "t": {"2": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 2.449489742783178}, "wasmer.wasmer": {"tf": 2.449489742783178}, "wasmer.wasmer.wat2wasm": {"tf": 1.4142135623730951}, "wasmer.wasmer.wasm2wat": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 2}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 2}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 2.23606797749979}, "wasmer.wasmer.Module": {"tf": 2.6457513110645907}, "wasmer.wasmer.Module.validate": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType": {"tf": 1.7320508075688772}, "wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 34}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}}, "df": 24, "_": {"docs": {}, "df": 0, "g": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}, "wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 11}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer": {"tf": 2}, "wasmer.wasmer": {"tf": 2}, "wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.to_dict": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 23}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}}, "df": 17}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}}, "df": 12}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.7320508075688772}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.FunctionType.params": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.ImportObject.register": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.MemoryType.minimum": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}}, "df": 14}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"wasmer": {"tf": 2}, "wasmer.wasmer": {"tf": 2}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}}, "df": 12}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}}, "df": 3}, "r": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 2.23606797749979}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 2}, "wasmer.wasmer.Function.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global": {"tf": 2}, "wasmer.wasmer.Global.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.value": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.Table.size": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 2.6457513110645907}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.7320508075688772}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportType": {"tf": 4.358898943540674}, "wasmer.wasmer.ImportType": {"tf": 4.795831523312719}}, "df": 42}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}}, "df": 5, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1.7320508075688772}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.MemoryType": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 2.23606797749979}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.ImportType": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1}, "c": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Memory.grow": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Table": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 2}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 2.449489742783178}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1.7320508075688772}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1.7320508075688772}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1.7320508075688772}}, "df": 15, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.TableType": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {"wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.ExportType": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1}}, "df": 4, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.TableType": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 19}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.7320508075688772}}, "df": 2, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.name": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 9}}}, "r": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}}, "df": 10}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}, "h": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.Instance": {"tf": 2}}, "df": 2}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}, "i": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}, "p": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}}, "df": 11}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 8}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.MemoryType.minimum": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.TableType.minimum": {"tf": 1}}, "df": 17}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 3}, "wasmer.wasmer": {"tf": 3}, "wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 2.23606797749979}, "wasmer.wasmer.ExportsIterator": {"tf": 2.23606797749979}, "wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Function.type": {"tf": 2.23606797749979}, "wasmer.wasmer.Memory": {"tf": 2}, "wasmer.wasmer.Memory.type": {"tf": 2}, "wasmer.wasmer.Table.type": {"tf": 2.23606797749979}, "wasmer.wasmer.Table.size": {"tf": 2.23606797749979}, "wasmer.wasmer.ImportObject": {"tf": 4}, "wasmer.wasmer.Instance": {"tf": 3.872983346207417}, "wasmer.wasmer.Float32Array": {"tf": 2}, "wasmer.wasmer.Float64Array": {"tf": 2}, "wasmer.wasmer.Int16Array": {"tf": 2}, "wasmer.wasmer.Int32Array": {"tf": 2}, "wasmer.wasmer.Int64Array": {"tf": 2}, "wasmer.wasmer.Int8Array": {"tf": 2}, "wasmer.wasmer.Uint16Array": {"tf": 2}, "wasmer.wasmer.Uint32Array": {"tf": 2}, "wasmer.wasmer.Uint64Array": {"tf": 2}, "wasmer.wasmer.Uint8Array": {"tf": 2}, "wasmer.wasmer.Module": {"tf": 2.8284271247461903}, "wasmer.wasmer.Module.validate": {"tf": 2}, "wasmer.wasmer.Module.custom_sections": {"tf": 2.6457513110645907}, "wasmer.wasmer.Module.serialize": {"tf": 2.6457513110645907}, "wasmer.wasmer.Module.deserialize": {"tf": 3.605551275463989}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 3.872983346207417}, "wasmer.wasmer.Store": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 2.449489742783178}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 3.1622776601683795}, "wasmer.wasmer.ImportType.module": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 38, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Module.name": {"tf": 1.7320508075688772}}, "df": 1}}}, "'": {"docs": {"wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"wasmer.wasmer.Store": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 23}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Exports": {"tf": 2}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory": {"tf": 4.123105625617661}, "wasmer.wasmer.Memory.grow": {"tf": 2.6457513110645907}, "wasmer.wasmer.Memory.uint8_view": {"tf": 2.23606797749979}, "wasmer.wasmer.Memory.int8_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int16_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.float32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.float64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.type": {"tf": 2.23606797749979}, "wasmer.wasmer.Memory.data_size": {"tf": 2.23606797749979}, "wasmer.wasmer.Memory.size": {"tf": 2.23606797749979}, "wasmer.wasmer.Memory.buffer": {"tf": 2.23606797749979}, "wasmer.wasmer.ImportObject": {"tf": 3.1622776601683795}, "wasmer.wasmer.ImportObject.register": {"tf": 2}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 2.6457513110645907}, "wasmer.wasmer.Float32Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Float64Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Int16Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Int32Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Int64Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Int8Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Uint16Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Uint32Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Uint64Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Uint8Array": {"tf": 2.449489742783178}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportType": {"tf": 1.7320508075688772}, "wasmer.wasmer.MemoryType": {"tf": 1.7320508075688772}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.MemoryType.minimum": {"tf": 1}, "wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 42}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 1.4142135623730951}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1.4142135623730951}}, "df": 15}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.type": {"tf": 2}, "wasmer.wasmer.Memory.data_size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.MemoryType": {"tf": 1}}, "df": 8}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Global": {"tf": 2.23606797749979}, "wasmer.wasmer.Global.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1.7320508075688772}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 10}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 13}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.7320508075688772}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType.results": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 10}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}}, "df": 27, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Float32Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Float64Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Int16Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Int32Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Int64Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Int8Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Uint16Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Uint32Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Uint64Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Uint8Array": {"tf": 1.7320508075688772}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 29, "_": {"docs": {}, "df": 0, "g": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1.7320508075688772}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Function": {"tf": 2.23606797749979}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 11}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportObject.register": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 14}}, "b": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "c": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1.7320508075688772}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 30, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.buffer": {"tf": 2.23606797749979}, "wasmer.wasmer.Buffer": {"tf": 2.23606797749979}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 15}, "d": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}, "\"": {"docs": {}, "df": 0, "\\": {"0": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 1}}}}}}}, "f": {"3": {"2": {"docs": {"wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.f32": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Value.f64": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}}, "df": 7}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {"wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2, "c": {"docs": {"wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Exports": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportsIterator": {"tf": 1.7320508075688772}, "wasmer.wasmer.Function.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportObject": {"tf": 2.23606797749979}, "wasmer.wasmer.Instance": {"tf": 2.23606797749979}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 10, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Exports": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 4.47213595499958}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 2.449489742783178}, "wasmer.wasmer.ImportObject.register": {"tf": 1.7320508075688772}, "wasmer.wasmer.Instance": {"tf": 3}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1.7320508075688772}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType.params": {"tf": 1}, "wasmer.wasmer.FunctionType.results": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType": {"tf": 1.4142135623730951}}, "df": 19, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Function": {"tf": 2.23606797749979}, "wasmer.wasmer.Function.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.type": {"tf": 1}}, "df": 7}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Function": {"tf": 2.449489742783178}, "wasmer.wasmer.FunctionType": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 6}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"wasmer.wasmer.Memory.float32_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.float32_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Memory.float64_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.float64_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"wasmer.wasmer.FunctionType.params": {"tf": 1}, "wasmer.wasmer.FunctionType.results": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1}}, "df": 70}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 2}, "wasmer.wasmer": {"tf": 2}, "wasmer.wasmer.Exports": {"tf": 4.123105625617661}, "wasmer.wasmer.ExportsIterator": {"tf": 2.8284271247461903}, "wasmer.wasmer.Function": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 3.3166247903554}, "wasmer.wasmer.Instance": {"tf": 2.6457513110645907}, "wasmer.wasmer.Instance.exports": {"tf": 1.7320508075688772}, "wasmer.wasmer.Float32Array": {"tf": 2}, "wasmer.wasmer.Float64Array": {"tf": 2}, "wasmer.wasmer.Int16Array": {"tf": 2}, "wasmer.wasmer.Int32Array": {"tf": 2}, "wasmer.wasmer.Int64Array": {"tf": 2}, "wasmer.wasmer.Int8Array": {"tf": 2}, "wasmer.wasmer.Uint16Array": {"tf": 2}, "wasmer.wasmer.Uint32Array": {"tf": 2}, "wasmer.wasmer.Uint64Array": {"tf": 2}, "wasmer.wasmer.Uint8Array": {"tf": 2}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 5.291502622129181}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.ExportType.name": {"tf": 1}}, "df": 28, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Module.exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "s": {"docs": {"wasmer.wasmer.FunctionType": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.name": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.TableType": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 3.4641016151377544}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1.4142135623730951}}, "df": 14}}}, "v": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.ImportObject.register": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Type": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}, "wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.TableType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 27}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 2.23606797749979}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1.4142135623730951}}, "df": 11, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}}, "df": 2}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Store": {"tf": 2.23606797749979}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"wasmer.wasmer.Memory.uint16_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.uint16_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"wasmer.wasmer.Memory.uint32_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.uint32_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Memory.uint64_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.uint64_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "8": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1.7320508075688772}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}}, "df": 21}}}}}}, "docs": {}, "df": 0}}}}, "s": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 2.449489742783178}, "wasmer.wasmer.Buffer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.name": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}}, "df": 12}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 2.23606797749979}, "wasmer.wasmer": {"tf": 2.23606797749979}, "wasmer.wasmer.Exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function": {"tf": 3.4641016151377544}, "wasmer.wasmer.Function.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global": {"tf": 2.23606797749979}, "wasmer.wasmer.Global.type": {"tf": 2}, "wasmer.wasmer.Global.value": {"tf": 2}, "wasmer.wasmer.Global.mutable": {"tf": 2}, "wasmer.wasmer.Memory": {"tf": 2.449489742783178}, "wasmer.wasmer.Memory.grow": {"tf": 2}, "wasmer.wasmer.Memory.uint8_view": {"tf": 2}, "wasmer.wasmer.Memory.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.data_size": {"tf": 2}, "wasmer.wasmer.Memory.size": {"tf": 2}, "wasmer.wasmer.Memory.buffer": {"tf": 2}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 4.58257569495584}, "wasmer.wasmer.ImportObject.register": {"tf": 2.23606797749979}, "wasmer.wasmer.Instance": {"tf": 2.8284271247461903}, "wasmer.wasmer.Buffer": {"tf": 2}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module": {"tf": 2.6457513110645907}, "wasmer.wasmer.Module.validate": {"tf": 2}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.serialize": {"tf": 2}, "wasmer.wasmer.Module.deserialize": {"tf": 2.23606797749979}, "wasmer.wasmer.Module.name": {"tf": 2.449489742783178}, "wasmer.wasmer.Store": {"tf": 3}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1.7320508075688772}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1.7320508075688772}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1.7320508075688772}}, "df": 48}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Table": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 2}, "wasmer.wasmer.Float64Array": {"tf": 2}, "wasmer.wasmer.Int16Array": {"tf": 2}, "wasmer.wasmer.Int32Array": {"tf": 2}, "wasmer.wasmer.Int64Array": {"tf": 2}, "wasmer.wasmer.Int8Array": {"tf": 2}, "wasmer.wasmer.Uint16Array": {"tf": 2}, "wasmer.wasmer.Uint32Array": {"tf": 2}, "wasmer.wasmer.Uint64Array": {"tf": 2}, "wasmer.wasmer.Uint8Array": {"tf": 2}}, "df": 10}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}}, "df": 10, "i": {"docs": {"wasmer.wasmer.Memory.grow": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Function": {"tf": 2}, "wasmer.wasmer.Function.type": {"tf": 2}, "wasmer.wasmer.ImportObject": {"tf": 3.1622776601683795}, "wasmer.wasmer.ImportObject.register": {"tf": 1.7320508075688772}, "wasmer.wasmer.Instance": {"tf": 3.7416573867739413}}, "df": 7, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Function.type": {"tf": 2}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int16_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.float32_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.float64_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 16}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "t": {"docs": {"wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1.4142135623730951}}, "df": 4}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.deserialize": {"tf": 2}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.deserialize": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Function": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Memory": {"tf": 2.23606797749979}, "wasmer.wasmer.Memory.grow": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.size": {"tf": 1.4142135623730951}}, "df": 5}}, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}}, "df": 10}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.FunctionType": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.7320508075688772}, "wasmer.wasmer.Module.name": {"tf": 3.1622776601683795}, "wasmer.wasmer.ExportType": {"tf": 2}, "wasmer.wasmer.ExportType.name": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 2}, "wasmer.wasmer.ImportType.module": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.name": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.ImportType.module": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}}, "df": 5}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1}}, "df": 3}}, "w": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Value": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 2}, "wasmer.wasmer.Float64Array": {"tf": 2}, "wasmer.wasmer.Int16Array": {"tf": 2}, "wasmer.wasmer.Int32Array": {"tf": 2}, "wasmer.wasmer.Int64Array": {"tf": 2}, "wasmer.wasmer.Int8Array": {"tf": 2}, "wasmer.wasmer.Uint16Array": {"tf": 2}, "wasmer.wasmer.Uint32Array": {"tf": 2}, "wasmer.wasmer.Uint64Array": {"tf": 2}, "wasmer.wasmer.Uint8Array": {"tf": 2}}, "df": 10}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1}, "wasmer.wasmer.MemoryType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 14}}}}}, "s": {"docs": {"wasmer.wasmer.ImportType": {"tf": 2.8284271247461903}}, "df": 1}}, "i": {"3": {"2": {"docs": {"wasmer": {"tf": 2}, "wasmer.wasmer": {"tf": 2}, "wasmer.wasmer.Exports": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportsIterator": {"tf": 1.7320508075688772}, "wasmer.wasmer.Function": {"tf": 3.605551275463989}, "wasmer.wasmer.Function.type": {"tf": 2.6457513110645907}, "wasmer.wasmer.Global": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 4}, "wasmer.wasmer.Instance": {"tf": 3.1622776601683795}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 2.23606797749979}, "wasmer.wasmer.FunctionType": {"tf": 2.449489742783178}, "wasmer.wasmer.GlobalType": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1.4142135623730951}}, "df": 19}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 2.6457513110645907}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.Value.i64": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.grow": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Memory.data_size": {"tf": 1}, "wasmer.wasmer.Memory.size": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 3.4641016151377544}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 3}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.name": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1}, "wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 5.656854249492381}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.ImportType.name": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}, "wasmer.wasmer.Value.i32": {"tf": 1}, "wasmer.wasmer.Value.i64": {"tf": 1}, "wasmer.wasmer.Value.f32": {"tf": 1}, "wasmer.wasmer.Value.f64": {"tf": 1}, "wasmer.wasmer.Value.v128": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1.4142135623730951}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1.4142135623730951}}, "df": 61, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 2.6457513110645907}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.to_dict": {"tf": 1}, "wasmer.wasmer.ImportObject.register": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 3.3166247903554}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Module.imports": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1}}, "df": 13}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.GlobalType": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"wasmer": {"tf": 2.449489742783178}, "wasmer.wasmer": {"tf": 2.449489742783178}, "wasmer.wasmer.Exports": {"tf": 2.449489742783178}, "wasmer.wasmer.ExportsIterator": {"tf": 2.23606797749979}, "wasmer.wasmer.Function": {"tf": 2.23606797749979}, "wasmer.wasmer.Function.type": {"tf": 2}, "wasmer.wasmer.Global": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 3}, "wasmer.wasmer.Memory.type": {"tf": 2}, "wasmer.wasmer.Table": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.type": {"tf": 2}, "wasmer.wasmer.Table.size": {"tf": 2}, "wasmer.wasmer.ImportObject": {"tf": 3.872983346207417}, "wasmer.wasmer.Instance": {"tf": 3.4641016151377544}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 2}, "wasmer.wasmer.Float64Array": {"tf": 2}, "wasmer.wasmer.Int16Array": {"tf": 2}, "wasmer.wasmer.Int32Array": {"tf": 2}, "wasmer.wasmer.Int64Array": {"tf": 2}, "wasmer.wasmer.Int8Array": {"tf": 2}, "wasmer.wasmer.Uint16Array": {"tf": 2}, "wasmer.wasmer.Uint32Array": {"tf": 2}, "wasmer.wasmer.Uint64Array": {"tf": 2}, "wasmer.wasmer.Uint8Array": {"tf": 2}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}}, "df": 28}, "t": {"docs": {}, "df": 0, "i": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}}, "df": 5}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"wasmer.wasmer.TableType": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}}, "df": 2}}}, "t": {"1": {"6": {"docs": {"wasmer.wasmer.Memory.int16_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.int16_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"wasmer.wasmer.Memory.int32_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.int32_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"wasmer.wasmer.Memory.int64_view": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.int64_view": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "8": {"docs": {"wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 3.1622776601683795}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}}, "df": 2}}}}}, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}}}}}}, "docs": {"wasmer.wasmer.Function": {"tf": 2}, "wasmer.wasmer.ImportObject": {"tf": 2.449489742783178}, "wasmer.wasmer.ImportObject.register": {"tf": 1.7320508075688772}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1}}, "df": 3}}, "g": {"docs": {"wasmer.wasmer.Instance": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {"wasmer.wasmer.Global": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.FunctionType.params": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.ExportsIterator": {"tf": 1}}, "df": 2}}, "'": {"docs": {"wasmer.wasmer.Value": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Exports": {"tf": 2.23606797749979}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 2.23606797749979}, "wasmer.wasmer.ImportType": {"tf": 2.23606797749979}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1}}, "v": {"1": {"2": {"8": {"docs": {"wasmer.wasmer.Value.v128": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Memory": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 2.23606797749979}, "wasmer.wasmer.Global.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global.value": {"tf": 2.449489742783178}, "wasmer.wasmer.Global.mutable": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.GlobalType.mutable": {"tf": 1}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 2.449489742783178}, "wasmer.wasmer.Value.i32": {"tf": 2}, "wasmer.wasmer.Value.i64": {"tf": 2}, "wasmer.wasmer.Value.f32": {"tf": 2}, "wasmer.wasmer.Value.f64": {"tf": 2}, "wasmer.wasmer.Value.v128": {"tf": 2}}, "df": 16}, "i": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 2}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Global": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1.4142135623730951}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Float64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Int8Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint16Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint32Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint64Array": {"tf": 1.4142135623730951}, "wasmer.wasmer.Uint8Array": {"tf": 1.4142135623730951}}, "df": 22}}, "a": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.Memory": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table": {"tf": 1.4142135623730951}, "wasmer.wasmer.FunctionType": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Global": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Table": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}, "wasmer.wasmer.Module.name": {"tf": 1.4142135623730951}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Store": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2, "'": {"docs": {}, "df": 0, "t": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler.into_opaque_compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler.into_opaque_compiler": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Store": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 7}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.to_dict": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.wasm2wat": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1.7320508075688772}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.TableType.type": {"tf": 1}}, "df": 26, "_": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Memory.data_size": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"wasmer.wasmer.Function": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Instance": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.validate": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 2}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {"wasmer.wasmer.GlobalType": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {"wasmer.wasmer.Module.deserialize": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function": {"tf": 4.69041575982343}, "wasmer.wasmer.Function.type": {"tf": 2.8284271247461903}, "wasmer.wasmer.Global": {"tf": 2}, "wasmer.wasmer.Global.type": {"tf": 2.23606797749979}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.type": {"tf": 2.23606797749979}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.serialize": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 4.69041575982343}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 2.23606797749979}, "wasmer.wasmer.GlobalType": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 4.47213595499958}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1.4142135623730951}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1.4142135623730951}}, "df": 23}, "i": {"docs": {}, "df": 0, "c": {"docs": {"wasmer.wasmer.TableType": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "'": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.MemoryType.shared": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {"wasmer.wasmer.Exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 2}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 2}, "wasmer.wasmer.Table.type": {"tf": 2.6457513110645907}, "wasmer.wasmer.Table.size": {"tf": 2.6457513110645907}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportType": {"tf": 1.7320508075688772}, "wasmer.wasmer.TableType": {"tf": 2}, "wasmer.wasmer.TableType.minimum": {"tf": 1}, "wasmer.wasmer.TableType.type": {"tf": 1}, "wasmer.wasmer.TableType.maximum": {"tf": 1}}, "df": 17, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.type": {"tf": 1}, "wasmer.wasmer.TableType": {"tf": 1.4142135623730951}}, "df": 6}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Table.type": {"tf": 2}, "wasmer.wasmer.TableType": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Global": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.value": {"tf": 1}, "wasmer.wasmer.Global.mutable": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.MemoryType": {"tf": 1}}, "df": 5}}, "i": {"docs": {"wasmer.wasmer.Module": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}}, "df": 13}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Value": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 2.8284271247461903}, "wasmer.wasmer": {"tf": 2.8284271247461903}, "wasmer.wasmer.Exports": {"tf": 3.7416573867739413}, "wasmer.wasmer.ExportsIterator": {"tf": 4.69041575982343}, "wasmer.wasmer.Function.type": {"tf": 2.8284271247461903}, "wasmer.wasmer.Table.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Table.size": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 7.3484692283495345}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 2.449489742783178}, "wasmer.wasmer.Instance": {"tf": 4.898979485566356}, "wasmer.wasmer.Module.deserialize": {"tf": 2.8284271247461903}, "wasmer.wasmer.ExportType": {"tf": 4.69041575982343}, "wasmer.wasmer.ImportType": {"tf": 6.164414002968976}}, "df": 14}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer": {"tf": 1.4142135623730951}, "wasmer.wasmer.Function.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1.7320508075688772}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "'": {"docs": {"wasmer.wasmer.Function": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.buffer": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}, "wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_cranelift.wasmer_compiler_cranelift": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_singlepass": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass": {"tf": 1}}, "df": 20}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Module.serialize": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "m": {"docs": {"wasmer.wasmer.Store": {"tf": 1}, "wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Function.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.ImportObject.contains_namespace": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 2.23606797749979}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}, "wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 11}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.ExportsIterator": {"tf": 1}, "wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}}, "df": 23, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Module.name": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Function": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.MemoryType.maximum": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 14}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.ImportObject": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}}, "df": 12}}}}}, "n": {"docs": {"wasmer.wasmer.Module.custom_sections": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"wasmer.wasmer.Store": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.FunctionType.results": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"wasmer.wasmer.Exports": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"wasmer": {"tf": 1}, "wasmer.wasmer": {"tf": 1}, "wasmer.wasmer.Exports": {"tf": 2}, "wasmer.wasmer.ExportsIterator": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global": {"tf": 2.8284271247461903}, "wasmer.wasmer.Global.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global.value": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global.mutable": {"tf": 1.7320508075688772}, "wasmer.wasmer.ImportObject": {"tf": 3.3166247903554}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1.7320508075688772}, "wasmer.wasmer.ExportType": {"tf": 1.7320508075688772}, "wasmer.wasmer.GlobalType": {"tf": 1.4142135623730951}, "wasmer.wasmer.GlobalType.type": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1.7320508075688772}}, "df": 16, "_": {"docs": {"wasmer.wasmer.Global": {"tf": 2.23606797749979}, "wasmer.wasmer.Global.type": {"tf": 1.4142135623730951}, "wasmer.wasmer.Global.value": {"tf": 2}, "wasmer.wasmer.Global.mutable": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 2}}, "df": 5, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Global": {"tf": 1.7320508075688772}, "wasmer.wasmer.Global.type": {"tf": 1.7320508075688772}, "wasmer.wasmer.GlobalType": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ExportType.type": {"tf": 1}, "wasmer.wasmer.GlobalType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportType.type": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Global": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Table": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Store": {"tf": 1}}, "df": 6}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.Function": {"tf": 1}, "wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module": {"tf": 1}, "wasmer.wasmer.Module.validate": {"tf": 1}, "wasmer.wasmer.Module.custom_sections": {"tf": 1.4142135623730951}}, "df": 6}}}}, "t": {"docs": {"wasmer.wasmer.Function": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject": {"tf": 1.4142135623730951}, "wasmer.wasmer.ImportObject.register": {"tf": 1}, "wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.FunctionType": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "t": {"docs": {"wasmer.wasmer.Memory": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Table.size": {"tf": 1}, "wasmer.wasmer.ImportObject.to_dict": {"tf": 1}, "wasmer.wasmer.Float32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Float64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Int8Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint16Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint32Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint64Array.bytes_per_element": {"tf": 1}, "wasmer.wasmer.Uint8Array.bytes_per_element": {"tf": 1}}, "df": 15, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}, "wasmer.wasmer.Float32Array": {"tf": 1}, "wasmer.wasmer.Float64Array": {"tf": 1}, "wasmer.wasmer.Int16Array": {"tf": 1}, "wasmer.wasmer.Int32Array": {"tf": 1}, "wasmer.wasmer.Int64Array": {"tf": 1}, "wasmer.wasmer.Int8Array": {"tf": 1}, "wasmer.wasmer.Uint16Array": {"tf": 1}, "wasmer.wasmer.Uint32Array": {"tf": 1}, "wasmer.wasmer.Uint64Array": {"tf": 1}, "wasmer.wasmer.Uint8Array": {"tf": 1}, "wasmer.wasmer.ExportType": {"tf": 1}, "wasmer.wasmer.ImportType": {"tf": 1}}, "df": 13}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"wasmer.wasmer.Memory.grow": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {"wasmer.wasmer.Instance": {"tf": 1}, "wasmer.wasmer.Module.deserialize": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"wasmer.wasmer.Module.exports": {"tf": 1}, "wasmer.wasmer.Module.imports": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"0": {"0": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}}, "df": 2}, "1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"0": {"0": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"0": {"0": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"0": {"0": {"docs": {"wasmer.wasmer.wat2wasm": {"tf": 1}, "wasmer.wasmer.wasm2wat": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "2": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"0": {"3": {"docs": {"wasmer.wasmer.Buffer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {"wasmer.wasmer.Function": {"tf": 2.449489742783178}, "wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.ImportObject.register": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}}, "df": 4}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"wasmer.wasmer.Exports": {"tf": 1}, "wasmer.wasmer.Global.type": {"tf": 1}, "wasmer.wasmer.Memory.uint8_view": {"tf": 1}, "wasmer.wasmer.Memory.int8_view": {"tf": 1}, "wasmer.wasmer.Memory.uint16_view": {"tf": 1}, "wasmer.wasmer.Memory.int16_view": {"tf": 1}, "wasmer.wasmer.Memory.uint32_view": {"tf": 1}, "wasmer.wasmer.Memory.int32_view": {"tf": 1}, "wasmer.wasmer.Memory.uint64_view": {"tf": 1}, "wasmer.wasmer.Memory.int64_view": {"tf": 1}, "wasmer.wasmer.Memory.float32_view": {"tf": 1}, "wasmer.wasmer.Memory.float64_view": {"tf": 1}, "wasmer.wasmer.Memory.type": {"tf": 1}, "wasmer.wasmer.Table.type": {"tf": 1}, "wasmer.wasmer.Instance.exports": {"tf": 1}, "wasmer.wasmer.GlobalType": {"tf": 1}}, "df": 16}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"wasmer.wasmer.ImportType.module": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"wasmer.wasmer.Function": {"tf": 2.449489742783178}, "wasmer.wasmer.ImportObject": {"tf": 2}, "wasmer.wasmer.ImportObject.register": {"tf": 1.4142135623730951}, "wasmer.wasmer.Instance": {"tf": 1.4142135623730951}}, "df": 4}, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"wasmer_compiler_cranelift.wasmer_compiler_cranelift.Compiler": {"tf": 1}, "wasmer_compiler_llvm.wasmer_compiler_llvm.Compiler": {"tf": 1}, "wasmer_compiler_singlepass.wasmer_compiler_singlepass.Compiler": {"tf": 1}}, "df": 3}}}}}}, "pipeline": ["trimmer", "stopWordFilter", "stemmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.addField("qualname");
            this.addField("fullname");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();